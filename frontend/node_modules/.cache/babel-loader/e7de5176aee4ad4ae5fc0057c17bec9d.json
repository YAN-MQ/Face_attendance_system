{"remainingRequest":"E:\\内容安全\\final\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\内容安全\\final\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\内容安全\\final\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\内容安全\\final\\frontend\\src\\components\\TestButtons.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\内容安全\\final\\frontend\\src\\components\\TestButtons.vue","mtime":1745417804453},{"path":"E:\\内容安全\\final\\frontend\\babel.config.js","mtime":1745384115006},{"path":"E:\\内容安全\\final\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745383817393},{"path":"E:\\内容安全\\final\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1745383814346},{"path":"E:\\内容安全\\final\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745383817393},{"path":"E:\\内容安全\\final\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1745383816753}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuaXRlcmF0b3IuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5pdGVyYXRvci5zb21lLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdUZXN0QnV0dG9ucycsCiAgZGF0YTogKCkgPT4gKHsKICAgIGlzTG9hZGluZzogZmFsc2UsCiAgICByZXN1bHQ6IG51bGwKICB9KSwKICBtZXRob2RzOiB7CiAgICBhc3luYyB0ZXN0RmFjZVJlY29nbml0aW9uKCkgewogICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7CiAgICAgIHRoaXMucmVzdWx0ID0gbnVsbDsKICAgICAgdHJ5IHsKICAgICAgICBjb25zb2xlLmxvZygn5rWL6K+V5Lq66IS46K+G5YirQVBJ6L+e5o6lJyk7CgogICAgICAgIC8vIOWPkemAgea1i+ivleivt+axguWIsOWQjuerrwogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KCcvYXBpL3Rlc3QvZmFjZV9yZWNvZ25pdGlvbicpOwogICAgICAgIGNvbnNvbGUubG9nKCfkurrohLjor4bliKvmtYvor5Xlk43lupQ6JywgcmVzcG9uc2UuZGF0YSk7CiAgICAgICAgdGhpcy5yZXN1bHQgPSB7CiAgICAgICAgICBzdWNjZXNzOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+S6uuiEuOivhuWIq0FQSei/nuaOpeaIkOWKnycsCiAgICAgICAgICBkYXRhOiByZXNwb25zZS5kYXRhCiAgICAgICAgfTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCfkurrohLjor4bliKvmtYvor5XlpLHotKU6JywgZXJyb3IpOwogICAgICAgIHRoaXMucmVzdWx0ID0gewogICAgICAgICAgc3VjY2VzczogZmFsc2UsCiAgICAgICAgICBtZXNzYWdlOiAn5Lq66IS46K+G5YirQVBJ6L+e5o6l5aSx6LSlJywKICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLAogICAgICAgICAgZGV0YWlsczogZXJyb3IucmVzcG9uc2UgPyBlcnJvci5yZXNwb25zZS5kYXRhIDogbnVsbAogICAgICAgIH07CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgICAgfQogICAgfSwKICAgIGFzeW5jIHRlc3RMaXZlbmVzc0RldGVjdGlvbigpIHsKICAgICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlOwogICAgICB0aGlzLnJlc3VsdCA9IG51bGw7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc29sZS5sb2coJ+a1i+ivlea0u+S9k+ajgOa1i0FQSei/nuaOpScpOwoKICAgICAgICAvLyDmtYvor5XmiYDmnInmtLvkvZPmo4DmtYvmlrnms5UKICAgICAgICBjb25zdCBtZXRob2RzID0gWydibGluaycsICdkZWVwX2xlYXJuaW5nJywgJ2ltcHJvdmVkJywgJ2FwaSddOwogICAgICAgIGNvbnN0IHJlc3VsdHMgPSB7fTsKICAgICAgICBmb3IgKGNvbnN0IG1ldGhvZCBvZiBtZXRob2RzKSB7CiAgICAgICAgICB0cnkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhg5rWL6K+V5rS75L2T5qOA5rWL5pa55rOVOiAke21ldGhvZH1gKTsKICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoYC9hcGkvdGVzdC9saXZlbmVzc19kZXRlY3Rpb24/bWV0aG9kPSR7bWV0aG9kfWApOwogICAgICAgICAgICByZXN1bHRzW21ldGhvZF0gPSB7CiAgICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSwKICAgICAgICAgICAgICBkYXRhOiByZXNwb25zZS5kYXRhCiAgICAgICAgICAgIH07CiAgICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgICByZXN1bHRzW21ldGhvZF0gPSB7CiAgICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsCiAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UKICAgICAgICAgICAgfTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgdGhpcy5yZXN1bHQgPSB7CiAgICAgICAgICBzdWNjZXNzOiBPYmplY3QudmFsdWVzKHJlc3VsdHMpLnNvbWUociA9PiByLnN1Y2Nlc3MpLAogICAgICAgICAgbWVzc2FnZTogJ+a0u+S9k+ajgOa1i0FQSea1i+ivleWujOaIkCcsCiAgICAgICAgICBtZXRob2RzOiByZXN1bHRzCiAgICAgICAgfTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCfmtLvkvZPmo4DmtYvmtYvor5XlpLHotKU6JywgZXJyb3IpOwogICAgICAgIHRoaXMucmVzdWx0ID0gewogICAgICAgICAgc3VjY2VzczogZmFsc2UsCiAgICAgICAgICBtZXNzYWdlOiAn5rS75L2T5qOA5rWLQVBJ6L+e5o6l5aSx6LSlJywKICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLAogICAgICAgICAgZGV0YWlsczogZXJyb3IucmVzcG9uc2UgPyBlcnJvci5yZXNwb25zZS5kYXRhIDogbnVsbAogICAgICAgIH07CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"names":["axios","name","data","isLoading","result","methods","testFaceRecognition","console","log","response","get","success","message","error","details","testLivenessDetection","results","method","Object","values","some","r"],"sources":["src/components/TestButtons.vue"],"sourcesContent":["<template>\r\n  <div class=\"test-buttons\">\r\n    <v-card class=\"pa-4 ma-4 glassmorphism\">\r\n      <v-card-title class=\"headline primary--text\">\r\n        功能测试\r\n      </v-card-title>\r\n      <v-card-text>\r\n        <p>使用下面的按钮测试API连接是否正常</p>\r\n        \r\n        <div class=\"d-flex justify-center mt-6\">\r\n          <v-btn\r\n            color=\"primary\"\r\n            large\r\n            class=\"mx-2 btn-pulse\"\r\n            @click=\"testFaceRecognition\"\r\n            :loading=\"isLoading\"\r\n          >\r\n            <v-icon left>mdi-account-check</v-icon>\r\n            测试人脸识别\r\n          </v-btn>\r\n          \r\n          <v-btn\r\n            color=\"warning\"\r\n            large\r\n            class=\"mx-2 btn-pulse\"\r\n            @click=\"testLivenessDetection\"\r\n            :loading=\"isLoading\"\r\n          >\r\n            <v-icon left>mdi-shield-account</v-icon>\r\n            测试活体检测\r\n          </v-btn>\r\n        </div>\r\n        \r\n        <v-alert\r\n          v-if=\"result\"\r\n          :type=\"result.success ? 'success' : 'error'\"\r\n          border=\"left\"\r\n          class=\"mt-6\"\r\n        >\r\n          <strong>测试结果:</strong> {{ result.message }}\r\n          <pre class=\"mt-2\">{{ JSON.stringify(result, null, 2) }}</pre>\r\n        </v-alert>\r\n      </v-card-text>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'TestButtons',\r\n  data: () => ({\r\n    isLoading: false,\r\n    result: null\r\n  }),\r\n  methods: {\r\n    async testFaceRecognition() {\r\n      this.isLoading = true;\r\n      this.result = null;\r\n      \r\n      try {\r\n        console.log('测试人脸识别API连接');\r\n        \r\n        // 发送测试请求到后端\r\n        const response = await axios.get('/api/test/face_recognition');\r\n        \r\n        console.log('人脸识别测试响应:', response.data);\r\n        this.result = {\r\n          success: true,\r\n          message: '人脸识别API连接成功',\r\n          data: response.data\r\n        };\r\n      } catch (error) {\r\n        console.error('人脸识别测试失败:', error);\r\n        \r\n        this.result = {\r\n          success: false,\r\n          message: '人脸识别API连接失败',\r\n          error: error.message,\r\n          details: error.response ? error.response.data : null\r\n        };\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    \r\n    async testLivenessDetection() {\r\n      this.isLoading = true;\r\n      this.result = null;\r\n      \r\n      try {\r\n        console.log('测试活体检测API连接');\r\n        \r\n        // 测试所有活体检测方法\r\n        const methods = ['blink', 'deep_learning', 'improved', 'api'];\r\n        const results = {};\r\n        \r\n        for (const method of methods) {\r\n          try {\r\n            console.log(`测试活体检测方法: ${method}`);\r\n            const response = await axios.get(`/api/test/liveness_detection?method=${method}`);\r\n            results[method] = {\r\n              success: true,\r\n              data: response.data\r\n            };\r\n          } catch (error) {\r\n            results[method] = {\r\n              success: false,\r\n              error: error.message\r\n            };\r\n          }\r\n        }\r\n        \r\n        this.result = {\r\n          success: Object.values(results).some(r => r.success),\r\n          message: '活体检测API测试完成',\r\n          methods: results\r\n        };\r\n      } catch (error) {\r\n        console.error('活体检测测试失败:', error);\r\n        \r\n        this.result = {\r\n          success: false,\r\n          message: '活体检测API连接失败',\r\n          error: error.message,\r\n          details: error.response ? error.response.data : null\r\n        };\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.test-buttons {\r\n  animation: fadeIn 0.5s ease-out;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(20px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\npre {\r\n  background-color: rgba(0, 0, 0, 0.05);\r\n  padding: 12px;\r\n  border-radius: 4px;\r\n  overflow-x: auto;\r\n  font-size: 12px;\r\n}\r\n</style> "],"mappings":";;AAgDA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,IAAA,EAAAA,CAAA;IACAC,SAAA;IACAC,MAAA;EACA;EACAC,OAAA;IACA,MAAAC,oBAAA;MACA,KAAAH,SAAA;MACA,KAAAC,MAAA;MAEA;QACAG,OAAA,CAAAC,GAAA;;QAEA;QACA,MAAAC,QAAA,SAAAT,KAAA,CAAAU,GAAA;QAEAH,OAAA,CAAAC,GAAA,cAAAC,QAAA,CAAAP,IAAA;QACA,KAAAE,MAAA;UACAO,OAAA;UACAC,OAAA;UACAV,IAAA,EAAAO,QAAA,CAAAP;QACA;MACA,SAAAW,KAAA;QACAN,OAAA,CAAAM,KAAA,cAAAA,KAAA;QAEA,KAAAT,MAAA;UACAO,OAAA;UACAC,OAAA;UACAC,KAAA,EAAAA,KAAA,CAAAD,OAAA;UACAE,OAAA,EAAAD,KAAA,CAAAJ,QAAA,GAAAI,KAAA,CAAAJ,QAAA,CAAAP,IAAA;QACA;MACA;QACA,KAAAC,SAAA;MACA;IACA;IAEA,MAAAY,sBAAA;MACA,KAAAZ,SAAA;MACA,KAAAC,MAAA;MAEA;QACAG,OAAA,CAAAC,GAAA;;QAEA;QACA,MAAAH,OAAA;QACA,MAAAW,OAAA;QAEA,WAAAC,MAAA,IAAAZ,OAAA;UACA;YACAE,OAAA,CAAAC,GAAA,cAAAS,MAAA;YACA,MAAAR,QAAA,SAAAT,KAAA,CAAAU,GAAA,wCAAAO,MAAA;YACAD,OAAA,CAAAC,MAAA;cACAN,OAAA;cACAT,IAAA,EAAAO,QAAA,CAAAP;YACA;UACA,SAAAW,KAAA;YACAG,OAAA,CAAAC,MAAA;cACAN,OAAA;cACAE,KAAA,EAAAA,KAAA,CAAAD;YACA;UACA;QACA;QAEA,KAAAR,MAAA;UACAO,OAAA,EAAAO,MAAA,CAAAC,MAAA,CAAAH,OAAA,EAAAI,IAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAV,OAAA;UACAC,OAAA;UACAP,OAAA,EAAAW;QACA;MACA,SAAAH,KAAA;QACAN,OAAA,CAAAM,KAAA,cAAAA,KAAA;QAEA,KAAAT,MAAA;UACAO,OAAA;UACAC,OAAA;UACAC,KAAA,EAAAA,KAAA,CAAAD,OAAA;UACAE,OAAA,EAAAD,KAAA,CAAAJ,QAAA,GAAAI,KAAA,CAAAJ,QAAA,CAAAP,IAAA;QACA;MACA;QACA,KAAAC,SAAA;MACA;IACA;EACA;AACA","ignoreList":[]}]}