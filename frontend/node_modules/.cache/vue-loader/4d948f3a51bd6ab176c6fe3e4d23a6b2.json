{"remainingRequest":"E:\\Face_attendance_system\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Face_attendance_system\\frontend\\src\\views\\Home.vue?vue&type=template&id=fae5bece&scoped=true","dependencies":[{"path":"E:\\Face_attendance_system\\frontend\\src\\views\\Home.vue","mtime":1745498666880},{"path":"E:\\Face_attendance_system\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745498657290},{"path":"E:\\Face_attendance_system\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1745498665451},{"path":"E:\\Face_attendance_system\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745498657290},{"path":"E:\\Face_attendance_system\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1745498657101},{"path":"E:\\Face_attendance_system\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1745498665241},{"path":"E:\\Face_attendance_system\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745498657290},{"path":"E:\\Face_attendance_system\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1745498665241}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}