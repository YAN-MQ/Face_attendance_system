{"remainingRequest":"E:\\Face_attendance_system\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Face_attendance_system\\frontend\\src\\views\\Attendance.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\Face_attendance_system\\frontend\\src\\views\\Attendance.vue","mtime":1745509842978},{"path":"E:\\Face_attendance_system\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745498657290},{"path":"E:\\Face_attendance_system\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1745498657101},{"path":"E:\\Face_attendance_system\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745498657290},{"path":"E:\\Face_attendance_system\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1745498665241}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Attendance.vue"],"names":[],"mappings":";AA+NA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Attendance.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"attendance\">\n    <v-row>\n      <v-col cols=\"12\" md=\"8\">\n        <v-card elevation=\"4\" class=\"hover-card primary-gradient\">\n          <v-card-title class=\"headline white--text\">\n            <v-icon left large color=\"white\">mdi-account-check</v-icon>\n            考勤打卡\n            <v-spacer></v-spacer>\n            <v-chip \n              :color=\"cameraStarted ? 'success' : 'error'\" \n              small\n              class=\"animated-chip\"\n              pill\n            >\n              {{ cameraStarted ? '摄像头已启动' : '摄像头未启动' }}\n            </v-chip>\n          </v-card-title>\n          \n          <v-card-text>\n            <div class=\"camera-container rounded-image\">\n              <video ref=\"video\" width=\"100%\" autoplay playsinline></video>\n              <canvas ref=\"canvas\" style=\"display: none;\"></canvas>\n              \n              <div class=\"camera-overlay\" v-if=\"!cameraStarted\">\n                <v-btn color=\"primary\" @click=\"startCamera\" class=\"btn-pulse\" rounded elevation=\"8\">\n                  <v-icon left>mdi-camera</v-icon>\n                  启动摄像头\n                </v-btn>\n              </div>\n              \n              <div v-if=\"isLoading\" class=\"loading-overlay\">\n                <v-progress-circular indeterminate color=\"primary\" size=\"64\"></v-progress-circular>\n                <div class=\"mt-4 text-center\">\n                  <div class=\"loading-text\">处理中</div>\n                  <div class=\"loading-wave mt-2\">\n                    <div class=\"dot\"></div>\n                    <div class=\"dot\"></div>\n                    <div class=\"dot\"></div>\n                  </div>\n                </div>\n              </div>\n              \n              <div v-if=\"recognitionResult && recognitionResult.success\" class=\"success-overlay\">\n                <v-icon color=\"success\" size=\"64\">mdi-check-circle</v-icon>\n                <div class=\"mt-2 text-h6\">签到成功！</div>\n              </div>\n              \n              <div class=\"face-frame\" v-if=\"cameraStarted && !isLoading\"></div>\n            </div>\n            \n            <div class=\"mt-5 text-center action-buttons\">\n              <v-btn \n                color=\"primary\" \n                large \n                @click=\"captureAndRecognize\" \n                :disabled=\"!cameraStarted || isLoading\"\n                class=\"btn-pulse mx-2\"\n                rounded\n                elevation=\"3\"\n              >\n                <v-icon left>mdi-account-check</v-icon>\n                考勤打卡\n              </v-btn>\n              \n              <v-btn \n                color=\"warning\" \n                @click=\"testLivenessDetection\" \n                :disabled=\"!cameraStarted || isLoading\"\n                class=\"btn-pulse mx-2\"\n                rounded\n                elevation=\"3\"\n              >\n                <v-icon left>mdi-shield-account</v-icon>\n                测试活体\n              </v-btn>\n              \n              <v-menu offset-y rounded=\"lg\">\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-btn\n                    color=\"secondary\"\n                    dark\n                    v-bind=\"attrs\"\n                    v-on=\"on\"\n                    class=\"mx-2\"\n                    rounded\n                    elevation=\"3\"\n                  >\n                    <v-icon left>mdi-cog</v-icon>\n                    活体检测方法\n                    <v-icon right>mdi-chevron-down</v-icon>\n                  </v-btn>\n                </template>\n                <v-list rounded=\"lg\" class=\"menu-list\">\n                  <v-list-item\n                    v-for=\"(method, index) in livenessMethods\"\n                    :key=\"index\"\n                    @click=\"updateLivenessMethod(method.value)\"\n                    class=\"rounded-lg my-1\"\n                  >\n                    <v-list-item-icon>\n                      <v-icon v-if=\"livenessMethod === method.value\" color=\"success\">\n                        mdi-check\n                      </v-icon>\n                    </v-list-item-icon>\n                    <v-list-item-content>\n                      <v-list-item-title>{{ method.text }}</v-list-item-title>\n                    </v-list-item-content>\n                  </v-list-item>\n                </v-list>\n              </v-menu>\n            </div>\n          </v-card-text>\n        </v-card>\n      </v-col>\n      \n      <v-col cols=\"12\" md=\"4\">\n        <v-card elevation=\"4\" class=\"hover-card mb-4 result-card\">\n          <v-card-title class=\"headline primary--text\">\n            <v-icon left color=\"primary\">mdi-information</v-icon>\n            检测结果\n          </v-card-title>\n          \n          <v-card-text>\n            <v-alert\n              v-if=\"detectionResult\"\n              :type=\"detectionResult.is_live ? 'success' : 'error'\"\n              class=\"result-alert\"\n              rounded=\"lg\"\n              elevation=\"2\"\n            >\n              <strong>活体检测结果:</strong> {{ detectionResult.message }}\n              <div class=\"mt-2\">\n                <v-progress-linear\n                  :value=\"detectionResult.confidence * 100\"\n                  :color=\"detectionResult.is_live ? 'success' : 'error'\"\n                  height=\"8\"\n                  striped\n                  rounded\n                ></v-progress-linear>\n                <div class=\"caption text-right\">\n                  置信度: {{ Math.round(detectionResult.confidence * 100) }}%\n                </div>\n              </div>\n            </v-alert>\n            \n            <v-alert\n              v-if=\"recognitionResult\"\n              :type=\"recognitionResult.success ? 'success' : 'error'\"\n              class=\"result-alert\"\n              rounded=\"lg\"\n              elevation=\"2\"\n            >\n              <strong>人脸识别结果:</strong> \n              <div v-if=\"recognitionResult.success\">\n                识别到学生 <strong>{{ recognitionResult.student_name }}</strong> ({{ recognitionResult.student_id }})\n              </div>\n              <div v-else>\n                未找到匹配的人脸\n              </div>\n              <div class=\"mt-2\" v-if=\"recognitionResult.similarity\">\n                <v-progress-linear\n                  :value=\"recognitionResult.similarity * 100\"\n                  :color=\"getSimilarityColor(recognitionResult.similarity)\"\n                  height=\"8\"\n                  striped\n                  rounded\n                ></v-progress-linear>\n                <div class=\"caption text-right\">\n                  相似度: {{ Math.round(recognitionResult.similarity * 100) }}%\n                </div>\n              </div>\n            </v-alert>\n            \n            <div class=\"text-center py-4 no-result-box rounded-lg pa-4\" v-if=\"!detectionResult && !recognitionResult\">\n              <v-icon color=\"grey\" size=\"64\">mdi-camera-off</v-icon>\n              <div class=\"mt-2 grey--text\">尚未进行检测</div>\n            </div>\n          </v-card-text>\n        </v-card>\n        \n        <v-card elevation=\"4\" class=\"hover-card guide-card\">\n          <v-card-title class=\"headline primary--text\">\n            <v-icon left color=\"primary\">mdi-help-circle</v-icon>\n            操作指南\n          </v-card-title>\n          \n          <v-card-text>\n            <v-timeline dense>\n              <v-timeline-item color=\"primary\">\n                <div class=\"font-weight-medium\">第一步：启动摄像头</div>\n                <div class=\"text-caption\">点击\"启动摄像头\"按钮，允许浏览器访问摄像头</div>\n              </v-timeline-item>\n              \n              <v-timeline-item color=\"warning\">\n                <div class=\"font-weight-medium\">第二步：面对摄像头</div>\n                <div class=\"text-caption\">确保面部在摄像头中清晰可见，光线充足</div>\n              </v-timeline-item>\n              \n              <v-timeline-item color=\"success\">\n                <div class=\"font-weight-medium\">第三步：进行考勤</div>\n                <div class=\"text-caption\">点击\"考勤打卡\"按钮，系统将自动进行活体检测和人脸识别</div>\n              </v-timeline-item>\n            </v-timeline>\n            \n            <v-alert\n              dense\n              type=\"info\"\n              border=\"left\"\n              class=\"mt-3 rounded-lg\"\n              elevation=\"2\"\n            >\n              <div class=\"font-weight-medium\">当前活体检测方法</div>\n              <div class=\"custom-tag mt-1\">{{ getCurrentLivenessMethodName() }}</div>\n            </v-alert>\n          </v-card-text>\n        </v-card>\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters, mapMutations, mapActions } from 'vuex';\n\nexport default {\n  name: 'Attendance',\n  data: () => ({\n    cameraStarted: false,\n    detectionResult: null,\n    recognitionResult: null,\n    livenessMethods: [\n      { text: '眨眼检测', value: 'blink' },\n      { text: '深度学习', value: 'deep_learning' },\n      { text: '改进多模态', value: 'improved' },\n      { text: '第三方API', value: 'api' }\n    ]\n  }),\n  computed: {\n    ...mapState(['livenessMethod']),\n    ...mapGetters(['isLoading'])\n  },\n  methods: {\n    ...mapMutations(['SET_ERROR']),\n    ...mapActions(['detectLiveness', 'recognizeFace', 'setLivenessMethod']),\n    \n    startCamera() {\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        navigator.mediaDevices.getUserMedia({ video: true })\n          .then(stream => {\n            this.$refs.video.srcObject = stream;\n            this.cameraStarted = true;\n            this.SET_ERROR(null);\n          })\n          .catch(err => {\n            this.SET_ERROR(`启动摄像头失败: ${err.message}`);\n            console.error('启动摄像头失败', err);\n          });\n      } else {\n        this.SET_ERROR('您的浏览器不支持摄像头访问');\n      }\n    },\n    \n    stopCamera() {\n      if (this.cameraStarted && this.$refs.video.srcObject) {\n        const tracks = this.$refs.video.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n        this.$refs.video.srcObject = null;\n        this.cameraStarted = false;\n      }\n    },\n    \n    captureImage() {\n      // 在画布上绘制视频当前帧\n      const video = this.$refs.video;\n      const canvas = this.$refs.canvas;\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n      \n      // 获取数据URL\n      return canvas.toDataURL('image/jpeg');\n    },\n    \n    async performLivenessCheck(imageData) {\n      try {\n        const result = await this.detectLiveness({\n          image: imageData,\n          method: this.livenessMethod\n        });\n        return result;\n      } catch (error) {\n        console.error(\"活体检测执行失败\", error);\n        this.SET_ERROR(`活体检测失败: ${error.message}`);\n        return { is_live: false, message: \"检测失败\", confidence: 0 };\n      }\n    },\n    \n    async testLivenessDetection() {\n      // 清除之前的结果\n      this.detectionResult = null;\n      this.recognitionResult = null;\n      \n      if (!this.cameraStarted) {\n        this.SET_ERROR('请先启动摄像头');\n        return;\n      }\n      \n      try {\n        const imageData = this.captureImage();\n        console.log(\"开始活体检测测试\");\n        const result = await this.performLivenessCheck(imageData);\n        console.log(\"活体检测结果:\", result);\n        this.detectionResult = result;\n        \n        // 添加成功动画效果，如果检测成功\n        if (result.is_live) {\n          this.playSuccessSound();\n        } else {\n          this.playErrorSound();\n        }\n      } catch (error) {\n        console.error(\"活体检测测试失败\", error);\n        this.SET_ERROR(`活体检测测试失败: ${error.message}`);\n      }\n    },\n    \n    async captureAndRecognize() {\n      // 清除之前的结果\n      this.detectionResult = null;\n      this.recognitionResult = null;\n      \n      if (!this.cameraStarted) {\n        this.SET_ERROR('请先启动摄像头');\n        return;\n      }\n      \n      try {\n        const imageData = this.captureImage();\n        console.log(\"开始考勤打卡流程\");\n        \n        // 先进行活体检测\n        console.log(\"执行活体检测\");\n        const livenessResult = await this.performLivenessCheck(imageData);\n        console.log(\"活体检测结果:\", livenessResult);\n        this.detectionResult = livenessResult;\n        \n        if (!livenessResult.is_live) {\n          this.SET_ERROR('活体检测失败，无法进行考勤');\n          this.playErrorSound();\n          return;\n        }\n        \n        // 通过活体检测后进行人脸识别\n        console.log(\"开始人脸识别\");\n        const recognitionResult = await this.recognizeFace(imageData);\n        console.log(\"人脸识别结果:\", recognitionResult);\n        this.recognitionResult = recognitionResult;\n        \n        // 添加成功动画效果，如果识别成功\n        if (recognitionResult.success) {\n          this.playSuccessSound();\n        } else {\n          this.playErrorSound();\n        }\n      } catch (error) {\n        console.error(\"考勤打卡流程失败\", error);\n        this.SET_ERROR(`考勤打卡失败: ${error.message}`);\n      }\n    },\n    \n    updateLivenessMethod(method) {\n      this.setLivenessMethod(method);\n    },\n    \n    playSuccessSound() {\n      try {\n        // 添加成功音效\n        const audio = new Audio();\n        audio.src = require('@/assets/success.mp3');\n        audio.play().catch(e => console.error('成功音频播放失败', e));\n      } catch (error) {\n        console.error(\"播放成功音效失败\", error);\n      }\n    },\n    \n    playErrorSound() {\n      try {\n        // 添加失败音效\n        const audio = new Audio();\n        audio.src = require('@/assets/error.mp3');\n        audio.play().catch(e => console.error('错误音频播放失败', e));\n      } catch (error) {\n        console.error(\"播放错误音效失败\", error);\n      }\n    },\n    \n    getSimilarityColor(similarity) {\n      if (similarity > 0.8) return 'success';\n      if (similarity > 0.6) return 'warning';\n      return 'error';\n    },\n    \n    getCurrentLivenessMethodName() {\n      const method = this.livenessMethods.find(m => m.value === this.livenessMethod);\n      return method ? method.text : '未知方法';\n    }\n  },\n  mounted() {\n    // 初始化时从store获取活体检测方法\n    console.log(\"Attendance组件加载，当前活体检测方法:\", this.$store.state.livenessMethod);\n  },\n  beforeDestroy() {\n    // 组件销毁前关闭摄像头\n    this.stopCamera();\n  }\n}\n</script>\n\n<style scoped>\n.attendance {\n  animation: fadeIn 0.5s ease-out;\n  position: relative;\n  padding: 16px;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.primary-gradient {\n  background: linear-gradient(135deg, #1976d2 0%, #2196f3 100%) !important;\n  border-radius: 24px !important;\n  overflow: hidden;\n}\n\n.result-card {\n  background-color: rgba(255, 255, 255, 0.95) !important;\n  border-radius: 24px !important;\n}\n\n.guide-card {\n  background-color: rgba(255, 255, 255, 0.95) !important;\n  border-radius: 24px !important;\n}\n\n.menu-list {\n  background-color: white !important;\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1) !important;\n  overflow: hidden;\n}\n\n.no-result-box {\n  background-color: rgba(255, 255, 255, 0.5);\n  border: 1px solid rgba(0, 0, 0, 0.05);\n}\n\n.camera-container {\n  position: relative;\n  border-radius: 24px !important;\n  overflow: hidden;\n  height: 400px;\n  background-color: #000;\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s ease;\n}\n\n.camera-container:hover {\n  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.25);\n  transform: translateY(-5px);\n}\n\n.camera-container video {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.camera-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.6);\n  backdrop-filter: blur(8px);\n  -webkit-backdrop-filter: blur(8px);\n  border-radius: 24px;\n}\n\n.loading-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.6);\n  backdrop-filter: blur(8px);\n  -webkit-backdrop-filter: blur(8px);\n  border-radius: 24px;\n}\n\n.success-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.6);\n  backdrop-filter: blur(8px);\n  -webkit-backdrop-filter: blur(8px);\n  animation: fadeInOut 3s forwards;\n  color: white;\n  border-radius: 24px;\n}\n\n@keyframes fadeInOut {\n  0% { opacity: 0; }\n  20% { opacity: 1; }\n  80% { opacity: 1; }\n  100% { opacity: 0; display: none; }\n}\n\n.loading-text {\n  font-size: 18px;\n  color: white;\n  margin-bottom: 8px;\n}\n\n.face-frame {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 250px;\n  height: 250px;\n  transform: translate(-50%, -50%);\n  border: 2px dashed rgba(255, 255, 255, 0.7);\n  border-radius: 50%;\n  box-shadow: 0 0 0 2000px rgba(0, 0, 0, 0.3);\n  animation: pulse-border 2s infinite;\n}\n\n@keyframes pulse-border {\n  0% {\n    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.3);\n    border-color: rgba(255, 255, 255, 0.5);\n  }\n  70% {\n    box-shadow: 0 0 0 2000px rgba(0, 0, 0, 0.4);\n    border-color: rgba(255, 255, 255, 0.9);\n  }\n  100% {\n    box-shadow: 0 0 0 2000px rgba(0, 0, 0, 0.3);\n    border-color: rgba(255, 255, 255, 0.5);\n  }\n}\n\n.action-buttons {\n  animation: slideUp 0.5s ease-out;\n}\n\n@keyframes slideUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.result-alert {\n  transition: all 0.3s ease;\n  animation: slideInRight 0.5s ease-out;\n  border-radius: 16px !important;\n}\n\n@keyframes slideInRight {\n  from {\n    opacity: 0;\n    transform: translateX(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n.animated-chip {\n  animation: bounce 1s ease infinite;\n  border-radius: 20px !important;\n}\n\n@keyframes bounce {\n  0%, 100% { transform: translateY(0); }\n  50% { transform: translateY(-5px); }\n}\n\n.loading-wave .dot {\n  background-color: white;\n  width: 8px;\n  height: 8px;\n  margin: 0 4px;\n  border-radius: 50%;\n  display: inline-block;\n  animation: wave 1.3s linear infinite;\n}\n\n.custom-tag {\n  display: inline-flex;\n  align-items: center;\n  padding: 4px 12px;\n  background-color: rgba(33, 150, 243, 0.2);\n  color: #1976d2;\n  border-radius: 16px;\n  font-weight: 500;\n  font-size: 0.9rem;\n  border: 1px solid rgba(33, 150, 243, 0.3);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.theme--dark .custom-tag {\n  background-color: rgba(33, 150, 243, 0.3);\n  color: #90caf9;\n  border: 1px solid rgba(144, 202, 249, 0.3);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n}\n\n/* 深色模式适配 */\n.theme--dark .result-card,\n.theme--dark .guide-card {\n  background-color: #1E1E1E !important;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4) !important;\n}\n\n.theme--dark .no-result-box {\n  background-color: rgba(0, 0, 0, 0.3);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.theme--dark .primary-gradient {\n  background: linear-gradient(135deg, #0d47a1 0%, #1976d2 100%) !important;\n}\n\n.theme--dark .result-alert {\n  background-color: rgba(0, 0, 0, 0.3) !important;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.theme--dark .loading-overlay,\n.theme--dark .camera-overlay,\n.theme--dark .success-overlay {\n  background: rgba(0, 0, 0, 0.7);\n}\n\n.theme--dark .v-alert {\n  border: 1px solid rgba(255, 255, 255, 0.05) !important;\n}\n\n.theme--dark .loading-wave .dot {\n  background-color: #90caf9;\n}\n\n.theme--dark .menu-list {\n  background-color: #1E1E1E !important;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.4) !important;\n}\n</style> "]}]}