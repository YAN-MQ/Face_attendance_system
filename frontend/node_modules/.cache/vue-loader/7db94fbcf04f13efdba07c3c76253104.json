{"remainingRequest":"E:\\内容安全\\final\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\内容安全\\final\\frontend\\src\\views\\Attendance.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\内容安全\\final\\frontend\\src\\views\\Attendance.vue","mtime":1745381878618},{"path":"E:\\内容安全\\final\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745383817393},{"path":"E:\\内容安全\\final\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1745383814346},{"path":"E:\\内容安全\\final\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745383817393},{"path":"E:\\内容安全\\final\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1745383816753}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBtYXBHZXR0ZXJzLCBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCcNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAnQXR0ZW5kYW5jZScsDQogIGRhdGE6ICgpID0+ICh7DQogICAgY2FtZXJhU3RhcnRlZDogZmFsc2UsDQogICAgc3RyZWFtOiBudWxsLA0KICAgIGRldGVjdGlvblJlc3VsdDogbnVsbCwNCiAgICByZWNvZ25pdGlvblJlc3VsdDogbnVsbCwNCiAgICBsaXZlbmVzc01ldGhvZDogJ2JsaW5rJywgLy8g6buY6K6k5L2/55So55yo55y85qOA5rWLDQogIH0pLA0KICBjb21wdXRlZDogew0KICAgIC4uLm1hcEdldHRlcnMoWw0KICAgICAgJ2lzTG9hZGluZycsDQogICAgICAnZXJyb3InLA0KICAgICAgJ2xhc3REZXRlY3Rpb25SZXN1bHQnDQogICAgXSkNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIC4uLm1hcEFjdGlvbnMoWw0KICAgICAgJ2RldGVjdExpdmVuZXNzJywNCiAgICAgICdyZWNvZ25pemVGYWNlJywNCiAgICAgICdzZXRMaXZlbmVzc01ldGhvZCcNCiAgICBdKSwNCiAgICBhc3luYyBzdGFydENhbWVyYSgpIHsNCiAgICAgIHRyeSB7DQogICAgICAgIC8vIOivt+axguaRhOWDj+WktOadg+mZkA0KICAgICAgICB0aGlzLnN0cmVhbSA9IGF3YWl0IG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKHsgDQogICAgICAgICAgdmlkZW86IHsgZmFjaW5nTW9kZTogInVzZXIiIH0sIC8vIOS9v+eUqOWJjee9ruaRhOWDj+WktA0KICAgICAgICAgIGF1ZGlvOiBmYWxzZSANCiAgICAgICAgfSk7DQogICAgICAgIA0KICAgICAgICAvLyDlsIbop4bpopHmtYHnu5HlrprliLB2aWRlb+WFg+e0oA0KICAgICAgICB0aGlzLiRyZWZzLnZpZGVvLnNyY09iamVjdCA9IHRoaXMuc3RyZWFtOw0KICAgICAgICB0aGlzLmNhbWVyYVN0YXJ0ZWQgPSB0cnVlOw0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgY29uc29sZS5lcnJvcign5peg5rOV6K6/6Zeu5pGE5YOP5aS0OicsIGVycm9yKTsNCiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdTRVRfRVJST1InLCAn5peg5rOV6K6/6Zeu5pGE5YOP5aS0OicgKyBlcnJvci5tZXNzYWdlKTsNCiAgICAgIH0NCiAgICB9LA0KICAgIHN0b3BDYW1lcmEoKSB7DQogICAgICBpZiAodGhpcy5zdHJlYW0pIHsNCiAgICAgICAgdGhpcy5zdHJlYW0uZ2V0VHJhY2tzKCkuZm9yRWFjaCh0cmFjayA9PiB0cmFjay5zdG9wKCkpOw0KICAgICAgICB0aGlzLmNhbWVyYVN0YXJ0ZWQgPSBmYWxzZTsNCiAgICAgICAgdGhpcy5zdHJlYW0gPSBudWxsOw0KICAgICAgfQ0KICAgIH0sDQogICAgY2FwdHVyZUltYWdlKCkgew0KICAgICAgY29uc3QgdmlkZW8gPSB0aGlzLiRyZWZzLnZpZGVvOw0KICAgICAgY29uc3QgY2FudmFzID0gdGhpcy4kcmVmcy5jYW52YXM7DQogICAgICANCiAgICAgIC8vIOiuvue9rmNhbnZhc+WwuuWvuOS4juinhumikeS4gOiHtA0KICAgICAgY2FudmFzLndpZHRoID0gdmlkZW8udmlkZW9XaWR0aDsNCiAgICAgIGNhbnZhcy5oZWlnaHQgPSB2aWRlby52aWRlb0hlaWdodDsNCiAgICAgIA0KICAgICAgLy8g5ZyoY2FudmFz5LiK57uY5Yi25b2T5YmN6KeG6aKR5binDQogICAgICBjb25zdCBjb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7DQogICAgICBjb250ZXh0LmRyYXdJbWFnZSh2aWRlbywgMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTsNCiAgICAgIA0KICAgICAgLy8g6I635Y+W5Zu+5YOP55qEYmFzZTY057yW56CBDQogICAgICByZXR1cm4gY2FudmFzLnRvRGF0YVVSTCgnaW1hZ2UvanBlZycpOw0KICAgIH0sDQogICAgYXN5bmMgdGVzdExpdmVuZXNzKCkgew0KICAgICAgLy8g5riF6Zmk5LmL5YmN55qE57uT5p6cDQogICAgICB0aGlzLmRldGVjdGlvblJlc3VsdCA9IG51bGw7DQogICAgICB0aGlzLnJlY29nbml0aW9uUmVzdWx0ID0gbnVsbDsNCiAgICAgIA0KICAgICAgaWYgKCF0aGlzLmNhbWVyYVN0YXJ0ZWQpIHsNCiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdTRVRfRVJST1InLCAn6K+35YWI5ZCv5Yqo5pGE5YOP5aS0Jyk7DQogICAgICAgIHJldHVybjsNCiAgICAgIH0NCiAgICAgIA0KICAgICAgY29uc3QgaW1hZ2VEYXRhID0gdGhpcy5jYXB0dXJlSW1hZ2UoKTsNCiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuZGV0ZWN0TGl2ZW5lc3MoaW1hZ2VEYXRhKTsNCiAgICAgIHRoaXMuZGV0ZWN0aW9uUmVzdWx0ID0gcmVzdWx0Ow0KICAgIH0sDQogICAgYXN5bmMgY2FwdHVyZUFuZFJlY29nbml6ZSgpIHsNCiAgICAgIC8vIOa4hemZpOS5i+WJjeeahOe7k+aenA0KICAgICAgdGhpcy5kZXRlY3Rpb25SZXN1bHQgPSBudWxsOw0KICAgICAgdGhpcy5yZWNvZ25pdGlvblJlc3VsdCA9IG51bGw7DQogICAgICANCiAgICAgIGlmICghdGhpcy5jYW1lcmFTdGFydGVkKSB7DQogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnU0VUX0VSUk9SJywgJ+ivt+WFiOWQr+WKqOaRhOWDj+WktCcpOw0KICAgICAgICByZXR1cm47DQogICAgICB9DQogICAgICANCiAgICAgIGNvbnN0IGltYWdlRGF0YSA9IHRoaXMuY2FwdHVyZUltYWdlKCk7DQogICAgICANCiAgICAgIC8vIOWFiOi/m+ihjOa0u+S9k+ajgOa1iw0KICAgICAgY29uc3QgbGl2ZW5lc3NSZXN1bHQgPSBhd2FpdCB0aGlzLmRldGVjdExpdmVuZXNzKGltYWdlRGF0YSk7DQogICAgICB0aGlzLmRldGVjdGlvblJlc3VsdCA9IGxpdmVuZXNzUmVzdWx0Ow0KICAgICAgDQogICAgICBpZiAoIWxpdmVuZXNzUmVzdWx0LmlzX2xpdmUpIHsNCiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdTRVRfRVJST1InLCAn5rS75L2T5qOA5rWL5aSx6LSl77yM5peg5rOV6L+b6KGM6ICD5YukJyk7DQogICAgICAgIHJldHVybjsNCiAgICAgIH0NCiAgICAgIA0KICAgICAgLy8g6YCa6L+H5rS75L2T5qOA5rWL5ZCO6L+b6KGM5Lq66IS46K+G5YirDQogICAgICBjb25zdCByZWNvZ25pdGlvblJlc3VsdCA9IGF3YWl0IHRoaXMucmVjb2duaXplRmFjZShpbWFnZURhdGEpOw0KICAgICAgdGhpcy5yZWNvZ25pdGlvblJlc3VsdCA9IHJlY29nbml0aW9uUmVzdWx0Ow0KICAgIH0sDQogICAgdXBkYXRlTGl2ZW5lc3NNZXRob2QobWV0aG9kKSB7DQogICAgICB0aGlzLnNldExpdmVuZXNzTWV0aG9kKG1ldGhvZCk7DQogICAgfQ0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIC8vIOWIneWni+WMluaXtuS7jnN0b3Jl6I635Y+W5rS75L2T5qOA5rWL5pa55rOVDQogICAgdGhpcy5saXZlbmVzc01ldGhvZCA9IHRoaXMuJHN0b3JlLmdldHRlcnMubGl2ZW5lc3NNZXRob2Q7DQogIH0sDQogIGJlZm9yZURlc3Ryb3koKSB7DQogICAgLy8g57uE5Lu26ZSA5q+B5YmN5YWz6Zet5pGE5YOP5aS0DQogICAgdGhpcy5zdG9wQ2FtZXJhKCk7DQogIH0NCn0NCg=="},{"version":3,"sources":["Attendance.vue"],"names":[],"mappings":";AA0FA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Attendance.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"attendance\">\r\n    <v-row>\r\n      <v-col cols=\"12\">\r\n        <v-card elevation=\"2\">\r\n          <v-card-title class=\"headline\">\r\n            <v-icon left>mdi-account-check</v-icon>\r\n            考勤打卡\r\n          </v-card-title>\r\n          \r\n          <v-card-text>\r\n            <v-row>\r\n              <v-col cols=\"12\" md=\"8\">\r\n                <div class=\"camera-container\">\r\n                  <video ref=\"video\" width=\"100%\" autoplay playsinline></video>\r\n                  <canvas ref=\"canvas\" style=\"display: none;\"></canvas>\r\n                  \r\n                  <div class=\"camera-overlay\" v-if=\"!cameraStarted\">\r\n                    <v-btn color=\"primary\" @click=\"startCamera\">\r\n                      <v-icon left>mdi-camera</v-icon>\r\n                      启动摄像头\r\n                    </v-btn>\r\n                  </div>\r\n                  \r\n                  <div v-if=\"isLoading\" class=\"loading-overlay\">\r\n                    <v-progress-circular indeterminate color=\"primary\"></v-progress-circular>\r\n                    <div class=\"mt-2\">处理中...</div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"mt-4 text-center\">\r\n                  <v-btn color=\"primary\" large @click=\"captureAndRecognize\" :disabled=\"!cameraStarted || isLoading\">\r\n                    <v-icon left>mdi-account-check</v-icon>\r\n                    考勤打卡\r\n                  </v-btn>\r\n                  \r\n                  <v-btn class=\"ml-4\" color=\"warning\" @click=\"testLiveness\" :disabled=\"!cameraStarted || isLoading\">\r\n                    <v-icon left>mdi-shield-account</v-icon>\r\n                    仅测试活体\r\n                  </v-btn>\r\n                </div>\r\n              </v-col>\r\n              \r\n              <v-col cols=\"12\" md=\"4\">\r\n                <v-card outlined class=\"mb-4\">\r\n                  <v-card-title>\r\n                    <v-icon left>mdi-cog</v-icon>\r\n                    活体检测方式\r\n                  </v-card-title>\r\n                  <v-card-text>\r\n                    <v-radio-group v-model=\"livenessMethod\" @change=\"updateLivenessMethod\">\r\n                      <v-radio label=\"眨眼检测\" value=\"blink\"></v-radio>\r\n                      <v-radio label=\"深度学习\" value=\"deep_learning\"></v-radio>\r\n                      <v-radio label=\"API检测\" value=\"api\"></v-radio>\r\n                    </v-radio-group>\r\n                  </v-card-text>\r\n                </v-card>\r\n                \r\n                <v-card outlined v-if=\"detectionResult\">\r\n                  <v-card-title :class=\"detectionResult.is_live ? 'success white--text' : 'error white--text'\">\r\n                    检测结果\r\n                  </v-card-title>\r\n                  <v-card-text>\r\n                    <p><strong>状态:</strong> {{ detectionResult.is_live ? '真实人脸' : '非真实人脸' }}</p>\r\n                    <p><strong>置信度:</strong> {{ (detectionResult.confidence * 100).toFixed(2) }}%</p>\r\n                    <p><strong>消息:</strong> {{ detectionResult.message }}</p>\r\n                  </v-card-text>\r\n                </v-card>\r\n                \r\n                <v-card outlined v-if=\"recognitionResult\" class=\"mt-4\">\r\n                  <v-card-title :class=\"recognitionResult.success ? 'success white--text' : 'error white--text'\">\r\n                    识别结果\r\n                  </v-card-title>\r\n                  <v-card-text>\r\n                    <p><strong>学号:</strong> {{ recognitionResult.student_id }}</p>\r\n                    <p><strong>姓名:</strong> {{ recognitionResult.student_name }}</p>\r\n                    <p><strong>相似度:</strong> {{ (recognitionResult.similarity * 100).toFixed(2) }}%</p>\r\n                    <p><strong>时间:</strong> {{ recognitionResult.timestamp }}</p>\r\n                  </v-card-text>\r\n                </v-card>\r\n              </v-col>\r\n            </v-row>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex'\r\n\r\nexport default {\r\n  name: 'Attendance',\r\n  data: () => ({\r\n    cameraStarted: false,\r\n    stream: null,\r\n    detectionResult: null,\r\n    recognitionResult: null,\r\n    livenessMethod: 'blink', // 默认使用眨眼检测\r\n  }),\r\n  computed: {\r\n    ...mapGetters([\r\n      'isLoading',\r\n      'error',\r\n      'lastDetectionResult'\r\n    ])\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      'detectLiveness',\r\n      'recognizeFace',\r\n      'setLivenessMethod'\r\n    ]),\r\n    async startCamera() {\r\n      try {\r\n        // 请求摄像头权限\r\n        this.stream = await navigator.mediaDevices.getUserMedia({ \r\n          video: { facingMode: \"user\" }, // 使用前置摄像头\r\n          audio: false \r\n        });\r\n        \r\n        // 将视频流绑定到video元素\r\n        this.$refs.video.srcObject = this.stream;\r\n        this.cameraStarted = true;\r\n      } catch (error) {\r\n        console.error('无法访问摄像头:', error);\r\n        this.$store.commit('SET_ERROR', '无法访问摄像头:' + error.message);\r\n      }\r\n    },\r\n    stopCamera() {\r\n      if (this.stream) {\r\n        this.stream.getTracks().forEach(track => track.stop());\r\n        this.cameraStarted = false;\r\n        this.stream = null;\r\n      }\r\n    },\r\n    captureImage() {\r\n      const video = this.$refs.video;\r\n      const canvas = this.$refs.canvas;\r\n      \r\n      // 设置canvas尺寸与视频一致\r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n      \r\n      // 在canvas上绘制当前视频帧\r\n      const context = canvas.getContext('2d');\r\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n      \r\n      // 获取图像的base64编码\r\n      return canvas.toDataURL('image/jpeg');\r\n    },\r\n    async testLiveness() {\r\n      // 清除之前的结果\r\n      this.detectionResult = null;\r\n      this.recognitionResult = null;\r\n      \r\n      if (!this.cameraStarted) {\r\n        this.$store.commit('SET_ERROR', '请先启动摄像头');\r\n        return;\r\n      }\r\n      \r\n      const imageData = this.captureImage();\r\n      const result = await this.detectLiveness(imageData);\r\n      this.detectionResult = result;\r\n    },\r\n    async captureAndRecognize() {\r\n      // 清除之前的结果\r\n      this.detectionResult = null;\r\n      this.recognitionResult = null;\r\n      \r\n      if (!this.cameraStarted) {\r\n        this.$store.commit('SET_ERROR', '请先启动摄像头');\r\n        return;\r\n      }\r\n      \r\n      const imageData = this.captureImage();\r\n      \r\n      // 先进行活体检测\r\n      const livenessResult = await this.detectLiveness(imageData);\r\n      this.detectionResult = livenessResult;\r\n      \r\n      if (!livenessResult.is_live) {\r\n        this.$store.commit('SET_ERROR', '活体检测失败，无法进行考勤');\r\n        return;\r\n      }\r\n      \r\n      // 通过活体检测后进行人脸识别\r\n      const recognitionResult = await this.recognizeFace(imageData);\r\n      this.recognitionResult = recognitionResult;\r\n    },\r\n    updateLivenessMethod(method) {\r\n      this.setLivenessMethod(method);\r\n    }\r\n  },\r\n  mounted() {\r\n    // 初始化时从store获取活体检测方法\r\n    this.livenessMethod = this.$store.getters.livenessMethod;\r\n  },\r\n  beforeDestroy() {\r\n    // 组件销毁前关闭摄像头\r\n    this.stopCamera();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.camera-container {\r\n  position: relative;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  height: 400px;\r\n  background-color: #000;\r\n}\r\n\r\n.camera-container video {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.camera-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n}\r\n\r\n.loading-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  color: white;\r\n}\r\n</style> "]}]}