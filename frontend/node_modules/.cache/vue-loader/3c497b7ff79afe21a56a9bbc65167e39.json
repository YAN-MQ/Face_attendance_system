{"remainingRequest":"E:\\Face_attendance_system\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Face_attendance_system\\frontend\\src\\views\\Attendance.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\Face_attendance_system\\frontend\\src\\views\\Attendance.vue","mtime":1745498666879},{"path":"E:\\Face_attendance_system\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745498657290},{"path":"E:\\Face_attendance_system\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1745498657101},{"path":"E:\\Face_attendance_system\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745498657290},{"path":"E:\\Face_attendance_system\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1745498665241}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Attendance.vue"],"names":[],"mappings":";AA8NA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Attendance.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"attendance\">\r\n    <v-row>\r\n      <v-col cols=\"12\" md=\"8\">\r\n        <v-card elevation=\"4\" class=\"hover-card primary-gradient\">\r\n          <v-card-title class=\"headline white--text\">\r\n            <v-icon left large color=\"white\">mdi-account-check</v-icon>\r\n            考勤打卡\r\n            <v-spacer></v-spacer>\r\n            <v-chip \r\n              :color=\"cameraStarted ? 'success' : 'error'\" \r\n              small\r\n              class=\"animated-chip\"\r\n              pill\r\n            >\r\n              {{ cameraStarted ? '摄像头已启动' : '摄像头未启动' }}\r\n            </v-chip>\r\n          </v-card-title>\r\n          \r\n          <v-card-text>\r\n            <div class=\"camera-container rounded-image\">\r\n              <video ref=\"video\" width=\"100%\" autoplay playsinline></video>\r\n              <canvas ref=\"canvas\" style=\"display: none;\"></canvas>\r\n              \r\n              <div class=\"camera-overlay\" v-if=\"!cameraStarted\">\r\n                <v-btn color=\"primary\" @click=\"startCamera\" class=\"btn-pulse\" rounded elevation=\"8\">\r\n                  <v-icon left>mdi-camera</v-icon>\r\n                  启动摄像头\r\n                </v-btn>\r\n              </div>\r\n              \r\n              <div v-if=\"isLoading\" class=\"loading-overlay\">\r\n                <v-progress-circular indeterminate color=\"primary\" size=\"64\"></v-progress-circular>\r\n                <div class=\"mt-4 text-center\">\r\n                  <div class=\"loading-text\">处理中</div>\r\n                  <div class=\"loading-wave mt-2\">\r\n                    <div class=\"dot\"></div>\r\n                    <div class=\"dot\"></div>\r\n                    <div class=\"dot\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div v-if=\"recognitionResult && recognitionResult.success\" class=\"success-overlay\">\r\n                <v-icon color=\"success\" size=\"64\">mdi-check-circle</v-icon>\r\n                <div class=\"mt-2 text-h6\">签到成功！</div>\r\n              </div>\r\n              \r\n              <div class=\"face-frame\" v-if=\"cameraStarted && !isLoading\"></div>\r\n            </div>\r\n            \r\n            <div class=\"mt-5 text-center action-buttons\">\r\n              <v-btn \r\n                color=\"primary\" \r\n                large \r\n                @click=\"captureAndRecognize\" \r\n                :disabled=\"!cameraStarted || isLoading\"\r\n                class=\"btn-pulse mx-2\"\r\n                rounded\r\n                elevation=\"3\"\r\n              >\r\n                <v-icon left>mdi-account-check</v-icon>\r\n                考勤打卡\r\n              </v-btn>\r\n              \r\n              <v-btn \r\n                color=\"warning\" \r\n                @click=\"testLivenessDetection\" \r\n                :disabled=\"!cameraStarted || isLoading\"\r\n                class=\"btn-pulse mx-2\"\r\n                rounded\r\n                elevation=\"3\"\r\n              >\r\n                <v-icon left>mdi-shield-account</v-icon>\r\n                测试活体\r\n              </v-btn>\r\n              \r\n              <v-menu offset-y rounded=\"lg\">\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                  <v-btn\r\n                    color=\"info\"\r\n                    text\r\n                    v-bind=\"attrs\"\r\n                    v-on=\"on\"\r\n                    class=\"mx-2\"\r\n                    rounded\r\n                  >\r\n                    <v-icon left>mdi-cog</v-icon>\r\n                    活体检测方法\r\n                    <v-icon right>mdi-chevron-down</v-icon>\r\n                  </v-btn>\r\n                </template>\r\n                <v-list rounded=\"lg\" class=\"menu-list\">\r\n                  <v-list-item\r\n                    v-for=\"(method, index) in livenessMethods\"\r\n                    :key=\"index\"\r\n                    @click=\"updateLivenessMethod(method.value)\"\r\n                    class=\"rounded-lg my-1\"\r\n                  >\r\n                    <v-list-item-icon>\r\n                      <v-icon v-if=\"livenessMethod === method.value\" color=\"success\">\r\n                        mdi-check\r\n                      </v-icon>\r\n                    </v-list-item-icon>\r\n                    <v-list-item-content>\r\n                      <v-list-item-title>{{ method.text }}</v-list-item-title>\r\n                    </v-list-item-content>\r\n                  </v-list-item>\r\n                </v-list>\r\n              </v-menu>\r\n            </div>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-col>\r\n      \r\n      <v-col cols=\"12\" md=\"4\">\r\n        <v-card elevation=\"4\" class=\"hover-card mb-4 result-card\">\r\n          <v-card-title class=\"headline primary--text\">\r\n            <v-icon left color=\"primary\">mdi-information</v-icon>\r\n            检测结果\r\n          </v-card-title>\r\n          \r\n          <v-card-text>\r\n            <v-alert\r\n              v-if=\"detectionResult\"\r\n              :type=\"detectionResult.is_live ? 'success' : 'error'\"\r\n              class=\"result-alert\"\r\n              rounded=\"lg\"\r\n              elevation=\"2\"\r\n            >\r\n              <strong>活体检测结果:</strong> {{ detectionResult.message }}\r\n              <div class=\"mt-2\">\r\n                <v-progress-linear\r\n                  :value=\"detectionResult.confidence * 100\"\r\n                  :color=\"detectionResult.is_live ? 'success' : 'error'\"\r\n                  height=\"8\"\r\n                  striped\r\n                  rounded\r\n                ></v-progress-linear>\r\n                <div class=\"caption text-right\">\r\n                  置信度: {{ Math.round(detectionResult.confidence * 100) }}%\r\n                </div>\r\n              </div>\r\n            </v-alert>\r\n            \r\n            <v-alert\r\n              v-if=\"recognitionResult\"\r\n              :type=\"recognitionResult.success ? 'success' : 'error'\"\r\n              class=\"result-alert\"\r\n              rounded=\"lg\"\r\n              elevation=\"2\"\r\n            >\r\n              <strong>人脸识别结果:</strong> \r\n              <div v-if=\"recognitionResult.success\">\r\n                识别到学生 <strong>{{ recognitionResult.student_name }}</strong> ({{ recognitionResult.student_id }})\r\n              </div>\r\n              <div v-else>\r\n                未找到匹配的人脸\r\n              </div>\r\n              <div class=\"mt-2\" v-if=\"recognitionResult.similarity\">\r\n                <v-progress-linear\r\n                  :value=\"recognitionResult.similarity * 100\"\r\n                  :color=\"getSimilarityColor(recognitionResult.similarity)\"\r\n                  height=\"8\"\r\n                  striped\r\n                  rounded\r\n                ></v-progress-linear>\r\n                <div class=\"caption text-right\">\r\n                  相似度: {{ Math.round(recognitionResult.similarity * 100) }}%\r\n                </div>\r\n              </div>\r\n            </v-alert>\r\n            \r\n            <div class=\"text-center py-4 no-result-box rounded-lg pa-4\" v-if=\"!detectionResult && !recognitionResult\">\r\n              <v-icon color=\"grey\" size=\"64\">mdi-camera-off</v-icon>\r\n              <div class=\"mt-2 grey--text\">尚未进行检测</div>\r\n            </div>\r\n          </v-card-text>\r\n        </v-card>\r\n        \r\n        <v-card elevation=\"4\" class=\"hover-card guide-card\">\r\n          <v-card-title class=\"headline primary--text\">\r\n            <v-icon left color=\"primary\">mdi-help-circle</v-icon>\r\n            操作指南\r\n          </v-card-title>\r\n          \r\n          <v-card-text>\r\n            <v-timeline dense>\r\n              <v-timeline-item color=\"primary\">\r\n                <div class=\"font-weight-medium\">第一步：启动摄像头</div>\r\n                <div class=\"text-caption\">点击\"启动摄像头\"按钮，允许浏览器访问摄像头</div>\r\n              </v-timeline-item>\r\n              \r\n              <v-timeline-item color=\"warning\">\r\n                <div class=\"font-weight-medium\">第二步：面对摄像头</div>\r\n                <div class=\"text-caption\">确保面部在摄像头中清晰可见，光线充足</div>\r\n              </v-timeline-item>\r\n              \r\n              <v-timeline-item color=\"success\">\r\n                <div class=\"font-weight-medium\">第三步：进行考勤</div>\r\n                <div class=\"text-caption\">点击\"考勤打卡\"按钮，系统将自动进行活体检测和人脸识别</div>\r\n              </v-timeline-item>\r\n            </v-timeline>\r\n            \r\n            <v-alert\r\n              dense\r\n              type=\"info\"\r\n              border=\"left\"\r\n              class=\"mt-3 rounded-lg\"\r\n              elevation=\"2\"\r\n            >\r\n              <div class=\"font-weight-medium\">当前活体检测方法</div>\r\n              <div class=\"custom-tag mt-1\">{{ getCurrentLivenessMethodName() }}</div>\r\n            </v-alert>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapGetters, mapMutations, mapActions } from 'vuex';\r\n\r\nexport default {\r\n  name: 'Attendance',\r\n  data: () => ({\r\n    cameraStarted: false,\r\n    detectionResult: null,\r\n    recognitionResult: null,\r\n    livenessMethods: [\r\n      { text: '眨眼检测', value: 'blink' },\r\n      { text: '深度学习', value: 'deep_learning' },\r\n      { text: '改进多模态', value: 'improved' },\r\n      { text: '第三方API', value: 'api' }\r\n    ]\r\n  }),\r\n  computed: {\r\n    ...mapState(['livenessMethod']),\r\n    ...mapGetters(['isLoading'])\r\n  },\r\n  methods: {\r\n    ...mapMutations(['SET_ERROR']),\r\n    ...mapActions(['detectLiveness', 'recognizeFace', 'setLivenessMethod']),\r\n    \r\n    startCamera() {\r\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n        navigator.mediaDevices.getUserMedia({ video: true })\r\n          .then(stream => {\r\n            this.$refs.video.srcObject = stream;\r\n            this.cameraStarted = true;\r\n            this.SET_ERROR(null);\r\n          })\r\n          .catch(err => {\r\n            this.SET_ERROR(`启动摄像头失败: ${err.message}`);\r\n            console.error('启动摄像头失败', err);\r\n          });\r\n      } else {\r\n        this.SET_ERROR('您的浏览器不支持摄像头访问');\r\n      }\r\n    },\r\n    \r\n    stopCamera() {\r\n      if (this.cameraStarted && this.$refs.video.srcObject) {\r\n        const tracks = this.$refs.video.srcObject.getTracks();\r\n        tracks.forEach(track => track.stop());\r\n        this.$refs.video.srcObject = null;\r\n        this.cameraStarted = false;\r\n      }\r\n    },\r\n    \r\n    captureImage() {\r\n      // 在画布上绘制视频当前帧\r\n      const video = this.$refs.video;\r\n      const canvas = this.$refs.canvas;\r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n      const ctx = canvas.getContext('2d');\r\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n      \r\n      // 获取数据URL\r\n      return canvas.toDataURL('image/jpeg');\r\n    },\r\n    \r\n    async performLivenessCheck(imageData) {\r\n      try {\r\n        const result = await this.detectLiveness({\r\n          image: imageData,\r\n          method: this.livenessMethod\r\n        });\r\n        return result;\r\n      } catch (error) {\r\n        console.error(\"活体检测执行失败\", error);\r\n        this.SET_ERROR(`活体检测失败: ${error.message}`);\r\n        return { is_live: false, message: \"检测失败\", confidence: 0 };\r\n      }\r\n    },\r\n    \r\n    async testLivenessDetection() {\r\n      // 清除之前的结果\r\n      this.detectionResult = null;\r\n      this.recognitionResult = null;\r\n      \r\n      if (!this.cameraStarted) {\r\n        this.SET_ERROR('请先启动摄像头');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const imageData = this.captureImage();\r\n        console.log(\"开始活体检测测试\");\r\n        const result = await this.performLivenessCheck(imageData);\r\n        console.log(\"活体检测结果:\", result);\r\n        this.detectionResult = result;\r\n        \r\n        // 添加成功动画效果，如果检测成功\r\n        if (result.is_live) {\r\n          this.playSuccessSound();\r\n        } else {\r\n          this.playErrorSound();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"活体检测测试失败\", error);\r\n        this.SET_ERROR(`活体检测测试失败: ${error.message}`);\r\n      }\r\n    },\r\n    \r\n    async captureAndRecognize() {\r\n      // 清除之前的结果\r\n      this.detectionResult = null;\r\n      this.recognitionResult = null;\r\n      \r\n      if (!this.cameraStarted) {\r\n        this.SET_ERROR('请先启动摄像头');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const imageData = this.captureImage();\r\n        console.log(\"开始考勤打卡流程\");\r\n        \r\n        // 先进行活体检测\r\n        console.log(\"执行活体检测\");\r\n        const livenessResult = await this.performLivenessCheck(imageData);\r\n        console.log(\"活体检测结果:\", livenessResult);\r\n        this.detectionResult = livenessResult;\r\n        \r\n        if (!livenessResult.is_live) {\r\n          this.SET_ERROR('活体检测失败，无法进行考勤');\r\n          this.playErrorSound();\r\n          return;\r\n        }\r\n        \r\n        // 通过活体检测后进行人脸识别\r\n        console.log(\"开始人脸识别\");\r\n        const recognitionResult = await this.recognizeFace(imageData);\r\n        console.log(\"人脸识别结果:\", recognitionResult);\r\n        this.recognitionResult = recognitionResult;\r\n        \r\n        // 添加成功动画效果，如果识别成功\r\n        if (recognitionResult.success) {\r\n          this.playSuccessSound();\r\n        } else {\r\n          this.playErrorSound();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"考勤打卡流程失败\", error);\r\n        this.SET_ERROR(`考勤打卡失败: ${error.message}`);\r\n      }\r\n    },\r\n    \r\n    updateLivenessMethod(method) {\r\n      this.setLivenessMethod(method);\r\n    },\r\n    \r\n    playSuccessSound() {\r\n      try {\r\n        // 添加成功音效\r\n        const audio = new Audio();\r\n        audio.src = require('@/assets/success.mp3');\r\n        audio.play().catch(e => console.error('成功音频播放失败', e));\r\n      } catch (error) {\r\n        console.error(\"播放成功音效失败\", error);\r\n      }\r\n    },\r\n    \r\n    playErrorSound() {\r\n      try {\r\n        // 添加失败音效\r\n        const audio = new Audio();\r\n        audio.src = require('@/assets/error.mp3');\r\n        audio.play().catch(e => console.error('错误音频播放失败', e));\r\n      } catch (error) {\r\n        console.error(\"播放错误音效失败\", error);\r\n      }\r\n    },\r\n    \r\n    getSimilarityColor(similarity) {\r\n      if (similarity > 0.8) return 'success';\r\n      if (similarity > 0.6) return 'warning';\r\n      return 'error';\r\n    },\r\n    \r\n    getCurrentLivenessMethodName() {\r\n      const method = this.livenessMethods.find(m => m.value === this.livenessMethod);\r\n      return method ? method.text : '未知方法';\r\n    }\r\n  },\r\n  mounted() {\r\n    // 初始化时从store获取活体检测方法\r\n    console.log(\"Attendance组件加载，当前活体检测方法:\", this.$store.state.livenessMethod);\r\n  },\r\n  beforeDestroy() {\r\n    // 组件销毁前关闭摄像头\r\n    this.stopCamera();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.attendance {\r\n  animation: fadeIn 0.5s ease-out;\r\n  position: relative;\r\n  padding: 16px;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.primary-gradient {\r\n  background: linear-gradient(135deg, #1976d2 0%, #2196f3 100%) !important;\r\n  border-radius: 24px !important;\r\n  overflow: hidden;\r\n}\r\n\r\n.result-card {\r\n  background-color: rgba(255, 255, 255, 0.95) !important;\r\n  border-radius: 24px !important;\r\n}\r\n\r\n.guide-card {\r\n  background-color: rgba(255, 255, 255, 0.95) !important;\r\n  border-radius: 24px !important;\r\n}\r\n\r\n.menu-list {\r\n  background-color: white !important;\r\n  border: 1px solid rgba(0, 0, 0, 0.05);\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1) !important;\r\n  overflow: hidden;\r\n}\r\n\r\n.no-result-box {\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  border: 1px solid rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.camera-container {\r\n  position: relative;\r\n  border-radius: 24px !important;\r\n  overflow: hidden;\r\n  height: 400px;\r\n  background-color: #000;\r\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.camera-container:hover {\r\n  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.25);\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.camera-container video {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.camera-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(0, 0, 0, 0.6);\r\n  backdrop-filter: blur(8px);\r\n  -webkit-backdrop-filter: blur(8px);\r\n  border-radius: 24px;\r\n}\r\n\r\n.loading-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(0, 0, 0, 0.6);\r\n  backdrop-filter: blur(8px);\r\n  -webkit-backdrop-filter: blur(8px);\r\n  border-radius: 24px;\r\n}\r\n\r\n.success-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(0, 0, 0, 0.6);\r\n  backdrop-filter: blur(8px);\r\n  -webkit-backdrop-filter: blur(8px);\r\n  animation: fadeInOut 3s forwards;\r\n  color: white;\r\n  border-radius: 24px;\r\n}\r\n\r\n@keyframes fadeInOut {\r\n  0% { opacity: 0; }\r\n  20% { opacity: 1; }\r\n  80% { opacity: 1; }\r\n  100% { opacity: 0; display: none; }\r\n}\r\n\r\n.loading-text {\r\n  font-size: 18px;\r\n  color: white;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.face-frame {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 250px;\r\n  height: 250px;\r\n  transform: translate(-50%, -50%);\r\n  border: 2px dashed rgba(255, 255, 255, 0.7);\r\n  border-radius: 50%;\r\n  box-shadow: 0 0 0 2000px rgba(0, 0, 0, 0.3);\r\n  animation: pulse-border 2s infinite;\r\n}\r\n\r\n@keyframes pulse-border {\r\n  0% {\r\n    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.3);\r\n    border-color: rgba(255, 255, 255, 0.5);\r\n  }\r\n  70% {\r\n    box-shadow: 0 0 0 2000px rgba(0, 0, 0, 0.4);\r\n    border-color: rgba(255, 255, 255, 0.9);\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 0 2000px rgba(0, 0, 0, 0.3);\r\n    border-color: rgba(255, 255, 255, 0.5);\r\n  }\r\n}\r\n\r\n.action-buttons {\r\n  animation: slideUp 0.5s ease-out;\r\n}\r\n\r\n@keyframes slideUp {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.result-alert {\r\n  transition: all 0.3s ease;\r\n  animation: slideInRight 0.5s ease-out;\r\n  border-radius: 16px !important;\r\n}\r\n\r\n@keyframes slideInRight {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateX(30px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n}\r\n\r\n.animated-chip {\r\n  animation: bounce 1s ease infinite;\r\n  border-radius: 20px !important;\r\n}\r\n\r\n@keyframes bounce {\r\n  0%, 100% { transform: translateY(0); }\r\n  50% { transform: translateY(-5px); }\r\n}\r\n\r\n.loading-wave .dot {\r\n  background-color: white;\r\n  width: 8px;\r\n  height: 8px;\r\n  margin: 0 4px;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  animation: wave 1.3s linear infinite;\r\n}\r\n\r\n.custom-tag {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  padding: 4px 12px;\r\n  background-color: rgba(33, 150, 243, 0.2);\r\n  color: #1976d2;\r\n  border-radius: 16px;\r\n  font-weight: 500;\r\n  font-size: 0.9rem;\r\n  border: 1px solid rgba(33, 150, 243, 0.3);\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.theme--dark .custom-tag {\r\n  background-color: rgba(33, 150, 243, 0.3);\r\n  color: #90caf9;\r\n  border: 1px solid rgba(144, 202, 249, 0.3);\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n/* 深色模式适配 */\r\n.theme--dark .result-card,\r\n.theme--dark .guide-card {\r\n  background-color: #1E1E1E !important;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4) !important;\r\n}\r\n\r\n.theme--dark .no-result-box {\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.theme--dark .primary-gradient {\r\n  background: linear-gradient(135deg, #0d47a1 0%, #1976d2 100%) !important;\r\n}\r\n\r\n.theme--dark .result-alert {\r\n  background-color: rgba(0, 0, 0, 0.3) !important;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.theme--dark .loading-overlay,\r\n.theme--dark .camera-overlay,\r\n.theme--dark .success-overlay {\r\n  background: rgba(0, 0, 0, 0.7);\r\n}\r\n\r\n.theme--dark .v-alert {\r\n  border: 1px solid rgba(255, 255, 255, 0.05) !important;\r\n}\r\n\r\n.theme--dark .loading-wave .dot {\r\n  background-color: #90caf9;\r\n}\r\n\r\n.theme--dark .menu-list {\r\n  background-color: #1E1E1E !important;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.4) !important;\r\n}\r\n</style> "]}]}