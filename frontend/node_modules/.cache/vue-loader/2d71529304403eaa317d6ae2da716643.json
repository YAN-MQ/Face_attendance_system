{"remainingRequest":"E:\\Face_attendance_system\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Face_attendance_system\\frontend\\src\\views\\Settings.vue?vue&type=style&index=0&id=53cc84dd&scoped=true&lang=css","dependencies":[{"path":"E:\\Face_attendance_system\\frontend\\src\\views\\Settings.vue","mtime":1745498897674},{"path":"E:\\Face_attendance_system\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745498659037},{"path":"E:\\Face_attendance_system\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1745498665241},{"path":"E:\\Face_attendance_system\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1745498662458},{"path":"E:\\Face_attendance_system\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745498657290},{"path":"E:\\Face_attendance_system\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1745498665241}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouc2V0dGluZ3Mgew0KICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KfQ0K"},{"version":3,"sources":["Settings.vue"],"names":[],"mappings":";AAiYA;AACA;AACA","file":"Settings.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"settings\">\r\n    <v-row>\r\n      <v-col cols=\"12\" md=\"6\">\r\n        <v-card elevation=\"2\">\r\n          <v-card-title class=\"headline\">\r\n            <v-icon left>mdi-shield-account</v-icon>\r\n            活体检测设置\r\n          </v-card-title>\r\n          \r\n          <v-card-text>\r\n            <p class=\"subtitle-1\">选择默认的活体检测方案</p>\r\n            <p class=\"body-2 mb-4\">系统集成了多种不同的活体检测方案，您可以根据安全级别需求选择合适的方案。</p>\r\n            \r\n            <v-radio-group v-model=\"livenessMethod\" @change=\"updateLivenessMethod\">\r\n              <v-radio\r\n                label=\"眨眼检测\"\r\n                value=\"blink\"\r\n              >\r\n                <template v-slot:label>\r\n                  <div>\r\n                    <strong>眨眼检测</strong>\r\n                    <div class=\"text-caption\">通过检测用户的眨眼动作来判断是否为真人，能有效防止照片攻击。</div>\r\n                  </div>\r\n                </template>\r\n              </v-radio>\r\n              \r\n              <v-radio\r\n                label=\"深度学习\"\r\n                value=\"deep_learning\"\r\n              >\r\n                <template v-slot:label>\r\n                  <div>\r\n                    <strong>深度学习纹理分析</strong>\r\n                    <div class=\"text-caption\">基于深度学习的纹理分析，能够区分真实人脸与照片/视频，精度更高。</div>\r\n                  </div>\r\n                </template>\r\n              </v-radio>\r\n              \r\n              <v-radio\r\n                label=\"改进多模态\"\r\n                value=\"improved\"\r\n              >\r\n                <template v-slot:label>\r\n                  <div>\r\n                    <strong>改进多模态活体检测</strong>\r\n                    <div class=\"text-caption\">\r\n                      结合眨眼检测与深度学习的多模态方法，具有更高的安全性和准确率，推荐使用。\r\n                      <v-chip\r\n                        x-small\r\n                        color=\"success\"\r\n                        class=\"ml-2\"\r\n                      >\r\n                        推荐\r\n                      </v-chip>\r\n                    </div>\r\n                  </div>\r\n                </template>\r\n              </v-radio>\r\n              \r\n              <v-radio\r\n                label=\"API检测\"\r\n                value=\"api\"\r\n                :disabled=\"!apiConfigured\"\r\n              >\r\n                <template v-slot:label>\r\n                  <div>\r\n                    <strong>第三方API活体检测</strong>\r\n                    <div class=\"text-caption\">\r\n                      接入腾讯云人脸识别API，提供高精度的活体检测，需要配置API密钥。\r\n                      <v-btn\r\n                        x-small\r\n                        text\r\n                        color=\"primary\"\r\n                        @click.stop=\"openConfigDialog\"\r\n                      >\r\n                        配置API\r\n                      </v-btn>\r\n                    </div>\r\n                  </div>\r\n                </template>\r\n              </v-radio>\r\n            </v-radio-group>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-col>\r\n      \r\n      <v-col cols=\"12\" md=\"6\">\r\n        <v-card elevation=\"2\">\r\n          <v-card-title class=\"headline\">\r\n            <v-icon left>mdi-cog</v-icon>\r\n            系统设置\r\n          </v-card-title>\r\n          \r\n          <v-card-text>\r\n            <v-form ref=\"form\">\r\n              <v-switch\r\n                v-model=\"settings.enableNotifications\"\r\n                label=\"启用通知\"\r\n                hint=\"打卡成功后显示通知\"\r\n                persistent-hint\r\n                color=\"primary\"\r\n                @change=\"saveSettings\"\r\n              ></v-switch>\r\n              \r\n              <v-switch\r\n                v-model=\"settings.autoRefresh\"\r\n                label=\"自动刷新考勤记录\"\r\n                hint=\"每隔5分钟自动刷新考勤记录\"\r\n                persistent-hint\r\n                color=\"primary\"\r\n                @change=\"saveSettings\"\r\n              ></v-switch>\r\n              \r\n              <v-switch\r\n                v-model=\"settings.darkMode\"\r\n                label=\"深色模式\"\r\n                hint=\"使用深色主题\"\r\n                persistent-hint\r\n                color=\"primary\"\r\n                @change=\"toggleDarkMode\"\r\n              ></v-switch>\r\n              \r\n              <v-divider class=\"my-4\"></v-divider>\r\n              \r\n              <v-select\r\n                v-model=\"settings.attendanceTimeout\"\r\n                :items=\"timeoutOptions\"\r\n                label=\"考勤超时设置\"\r\n                hint=\"设置考勤打卡超时时间\"\r\n                persistent-hint\r\n                @change=\"saveSettings\"\r\n              ></v-select>\r\n            </v-form>\r\n          </v-card-text>\r\n        </v-card>\r\n        \r\n        <v-card class=\"mt-4\" elevation=\"2\">\r\n          <v-card-title class=\"headline\">\r\n            <v-icon left>mdi-information-outline</v-icon>\r\n            系统信息\r\n          </v-card-title>\r\n          \r\n          <v-card-text>\r\n            <v-list dense>\r\n              <v-list-item>\r\n                <v-list-item-content>\r\n                  <v-list-item-title>版本</v-list-item-title>\r\n                  <v-list-item-subtitle>1.0.0</v-list-item-subtitle>\r\n                </v-list-item-content>\r\n              </v-list-item>\r\n              \r\n              <v-list-item>\r\n                <v-list-item-content>\r\n                  <v-list-item-title>API状态</v-list-item-title>\r\n                  <v-list-item-subtitle>\r\n                    <v-chip\r\n                      x-small\r\n                      :color=\"isAPIConnected ? 'success' : 'error'\"\r\n                    >\r\n                      {{ isAPIConnected ? '已连接' : '未连接' }}\r\n                    </v-chip>\r\n                  </v-list-item-subtitle>\r\n                </v-list-item-content>\r\n              </v-list-item>\r\n              \r\n              <v-list-item>\r\n                <v-list-item-content>\r\n                  <v-list-item-title>开发者</v-list-item-title>\r\n                  <v-list-item-subtitle>Ymq</v-list-item-subtitle>\r\n                </v-list-item-content>\r\n              </v-list-item>\r\n            </v-list>\r\n          </v-card-text>\r\n          \r\n          <v-card-actions>\r\n            <v-spacer></v-spacer>\r\n            <v-btn color=\"primary\" text @click=\"testConnection\">\r\n              <v-icon left>mdi-refresh</v-icon>\r\n              测试连接\r\n            </v-btn>\r\n          </v-card-actions>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n    \r\n    <!-- API配置对话框 -->\r\n    <v-dialog v-model=\"configDialog\" max-width=\"600px\">\r\n      <v-card>\r\n        <v-card-title class=\"headline\">\r\n          <v-icon left>mdi-cloud</v-icon>\r\n          API配置\r\n        </v-card-title>\r\n        \r\n        <v-card-text>\r\n          <v-form ref=\"apiForm\" v-model=\"isAPIFormValid\">\r\n            <v-alert v-if=\"apiConfigError\" type=\"error\" class=\"mb-4\">\r\n              {{ apiConfigError }}\r\n            </v-alert>\r\n            \r\n            <v-switch\r\n              v-model=\"apiConfig.enabled\"\r\n              label=\"启用第三方API活体检测\"\r\n              color=\"primary\"\r\n            ></v-switch>\r\n            \r\n            <v-text-field\r\n              v-model=\"apiConfig.secret_id\"\r\n              label=\"Secret ID\"\r\n              :rules=\"[v => !!v || 'Secret ID不能为空']\"\r\n              :disabled=\"!apiConfig.enabled\"\r\n              hint=\"腾讯云API的Secret ID\"\r\n              persistent-hint\r\n            ></v-text-field>\r\n            \r\n            <v-text-field\r\n              v-model=\"apiConfig.secret_key\"\r\n              label=\"Secret Key\"\r\n              :rules=\"[v => !!v || 'Secret Key不能为空']\"\r\n              :disabled=\"!apiConfig.enabled\"\r\n              hint=\"腾讯云API的Secret Key\"\r\n              persistent-hint\r\n              type=\"password\"\r\n            ></v-text-field>\r\n            \r\n            <v-select\r\n              v-model=\"apiConfig.region\"\r\n              :items=\"regionOptions\"\r\n              label=\"地区\"\r\n              :disabled=\"!apiConfig.enabled\"\r\n              hint=\"选择最靠近您的服务器区域以获得最佳性能\"\r\n              persistent-hint\r\n            ></v-select>\r\n          </v-form>\r\n        </v-card-text>\r\n        \r\n        <v-card-actions>\r\n          <v-spacer></v-spacer>\r\n          <v-btn color=\"error\" text @click=\"configDialog = false\">取消</v-btn>\r\n          <v-btn\r\n            color=\"success\"\r\n            text\r\n            @click=\"saveAPIConfig\"\r\n            :disabled=\"!isAPIFormValid\"\r\n          >\r\n            保存\r\n          </v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex';\r\n\r\nexport default {\r\n  name: 'Settings',\r\n  data: () => ({\r\n    livenessMethod: 'blink',\r\n    configDialog: false,\r\n    isAPIFormValid: false,\r\n    apiConfigError: null,\r\n    apiConfigured: false,\r\n    isAPIConnected: false,\r\n    settings: {\r\n      enableNotifications: true,\r\n      autoRefresh: false,\r\n      darkMode: false,\r\n      attendanceTimeout: 30\r\n    },\r\n    apiConfig: {\r\n      enabled: false,\r\n      secret_id: '',\r\n      secret_key: '',\r\n      region: 'ap-guangzhou'\r\n    },\r\n    timeoutOptions: [\r\n      { text: '15分钟', value: 15 },\r\n      { text: '30分钟', value: 30 },\r\n      { text: '45分钟', value: 45 },\r\n      { text: '60分钟', value: 60 }\r\n    ],\r\n    regionOptions: [\r\n      { text: '华南地区(广州)', value: 'ap-guangzhou' },\r\n      { text: '华东地区(上海)', value: 'ap-shanghai' },\r\n      { text: '华北地区(北京)', value: 'ap-beijing' },\r\n      { text: '港澳台地区(中国香港)', value: 'ap-hongkong' }\r\n    ]\r\n  }),\r\n  computed: {\r\n    ...mapGetters([\r\n      'livenessMethod',\r\n      'isLoading',\r\n      'error'\r\n    ])\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      'setLivenessMethod'\r\n    ]),\r\n    \r\n    updateLivenessMethod(method) {\r\n      this.setLivenessMethod(method);\r\n      this.saveSettings();\r\n    },\r\n    \r\n    openConfigDialog() {\r\n      this.configDialog = true;\r\n    },\r\n    \r\n    async saveAPIConfig() {\r\n      if (!this.isAPIFormValid) return;\r\n      \r\n      if (this.apiConfig.enabled && (!this.apiConfig.secret_id || !this.apiConfig.secret_key)) {\r\n        this.apiConfigError = '启用API时必须提供Secret ID和Secret Key';\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        // 在实际项目中，这里应该调用后端API保存配置\r\n        // const response = await this.$http.post('/api/configure_api', this.apiConfig);\r\n        \r\n        // 模拟API调用\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        \r\n        this.apiConfigured = this.apiConfig.enabled;\r\n        this.configDialog = false;\r\n        this.apiConfigError = null;\r\n        \r\n        if (this.apiConfig.enabled) {\r\n          this.$store.commit('SET_ERROR', null);\r\n          this.$store.commit('SET_LIVENESS_METHOD', 'api');\r\n        }\r\n      } catch (error) {\r\n        this.apiConfigError = '保存API配置失败: ' + error.message;\r\n      }\r\n    },\r\n    \r\n    saveSettings() {\r\n      // 在实际项目中，应该将设置保存到localStorage或后端\r\n      localStorage.setItem('settings', JSON.stringify(this.settings));\r\n    },\r\n    \r\n    loadSettings() {\r\n      const savedSettings = localStorage.getItem('settings');\r\n      if (savedSettings) {\r\n        this.settings = JSON.parse(savedSettings);\r\n      }\r\n    },\r\n    \r\n    toggleDarkMode() {\r\n      this.$vuetify.theme.dark = this.settings.darkMode;\r\n      this.saveSettings();\r\n    },\r\n    \r\n    async testConnection() {\r\n      // 在实际项目中，这里应该调用后端API测试连接\r\n      // try {\r\n      //   const response = await this.$http.get('/api/test_connection');\r\n      //   this.isAPIConnected = response.data.success;\r\n      // } catch (error) {\r\n      //   this.isAPIConnected = false;\r\n      // }\r\n      \r\n      // 模拟API调用\r\n      this.isAPIConnected = Math.random() > 0.3;\r\n    }\r\n  },\r\n  created() {\r\n    this.loadSettings();\r\n    this.livenessMethod = this.$store.getters.livenessMethod;\r\n    \r\n    // 模拟API配置状态\r\n    this.apiConfigured = Math.random() > 0.5;\r\n    this.isAPIConnected = Math.random() > 0.3;\r\n  },\r\n  mounted() {\r\n    // 应用深色模式设置\r\n    this.$vuetify.theme.dark = this.settings.darkMode;\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.settings {\r\n  margin-bottom: 20px;\r\n}\r\n</style> "]}]}