{"remainingRequest":"E:\\内容安全\\final\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\内容安全\\final\\frontend\\src\\views\\Attendance.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\内容安全\\final\\frontend\\src\\views\\Attendance.vue","mtime":1745416490182},{"path":"E:\\内容安全\\final\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745383817393},{"path":"E:\\内容安全\\final\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1745383814346},{"path":"E:\\内容安全\\final\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745383817393},{"path":"E:\\内容安全\\final\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1745383816753}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBtYXBTdGF0ZSwgbWFwR2V0dGVycywgbWFwTXV0YXRpb25zLCBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCc7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ0F0dGVuZGFuY2UnLA0KICBkYXRhOiAoKSA9PiAoew0KICAgIGNhbWVyYVN0YXJ0ZWQ6IGZhbHNlLA0KICAgIGRldGVjdGlvblJlc3VsdDogbnVsbCwNCiAgICByZWNvZ25pdGlvblJlc3VsdDogbnVsbCwNCiAgICBsaXZlbmVzc01ldGhvZHM6IFsNCiAgICAgIHsgdGV4dDogJ+ecqOecvOajgOa1iycsIHZhbHVlOiAnYmxpbmsnIH0sDQogICAgICB7IHRleHQ6ICfmt7HluqblrabkuaAnLCB2YWx1ZTogJ2RlZXBfbGVhcm5pbmcnIH0sDQogICAgICB7IHRleHQ6ICfmlLnov5vlpJrmqKHmgIEnLCB2YWx1ZTogJ2ltcHJvdmVkJyB9LA0KICAgICAgeyB0ZXh0OiAn56ys5LiJ5pa5QVBJJywgdmFsdWU6ICdhcGknIH0NCiAgICBdDQogIH0pLA0KICBjb21wdXRlZDogew0KICAgIC4uLm1hcFN0YXRlKFsnbGl2ZW5lc3NNZXRob2QnXSksDQogICAgLi4ubWFwR2V0dGVycyhbJ2lzTG9hZGluZyddKQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgLi4ubWFwTXV0YXRpb25zKFsnU0VUX0VSUk9SJ10pLA0KICAgIC4uLm1hcEFjdGlvbnMoWydkZXRlY3RMaXZlbmVzcycsICdyZWNvZ25pemVGYWNlJywgJ3NldExpdmVuZXNzTWV0aG9kJ10pLA0KICAgIA0KICAgIHN0YXJ0Q2FtZXJhKCkgew0KICAgICAgaWYgKG5hdmlnYXRvci5tZWRpYURldmljZXMgJiYgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEpIHsNCiAgICAgICAgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEoeyB2aWRlbzogdHJ1ZSB9KQ0KICAgICAgICAgIC50aGVuKHN0cmVhbSA9PiB7DQogICAgICAgICAgICB0aGlzLiRyZWZzLnZpZGVvLnNyY09iamVjdCA9IHN0cmVhbTsNCiAgICAgICAgICAgIHRoaXMuY2FtZXJhU3RhcnRlZCA9IHRydWU7DQogICAgICAgICAgICB0aGlzLlNFVF9FUlJPUihudWxsKTsNCiAgICAgICAgICB9KQ0KICAgICAgICAgIC5jYXRjaChlcnIgPT4gew0KICAgICAgICAgICAgdGhpcy5TRVRfRVJST1IoYOWQr+WKqOaRhOWDj+WktOWksei0pTogJHtlcnIubWVzc2FnZX1gKTsNCiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ+WQr+WKqOaRhOWDj+WktOWksei0pScsIGVycik7DQogICAgICAgICAgfSk7DQogICAgICB9IGVsc2Ugew0KICAgICAgICB0aGlzLlNFVF9FUlJPUign5oKo55qE5rWP6KeI5Zmo5LiN5pSv5oyB5pGE5YOP5aS06K6/6ZeuJyk7DQogICAgICB9DQogICAgfSwNCiAgICANCiAgICBzdG9wQ2FtZXJhKCkgew0KICAgICAgaWYgKHRoaXMuY2FtZXJhU3RhcnRlZCAmJiB0aGlzLiRyZWZzLnZpZGVvLnNyY09iamVjdCkgew0KICAgICAgICBjb25zdCB0cmFja3MgPSB0aGlzLiRyZWZzLnZpZGVvLnNyY09iamVjdC5nZXRUcmFja3MoKTsNCiAgICAgICAgdHJhY2tzLmZvckVhY2godHJhY2sgPT4gdHJhY2suc3RvcCgpKTsNCiAgICAgICAgdGhpcy4kcmVmcy52aWRlby5zcmNPYmplY3QgPSBudWxsOw0KICAgICAgICB0aGlzLmNhbWVyYVN0YXJ0ZWQgPSBmYWxzZTsNCiAgICAgIH0NCiAgICB9LA0KICAgIA0KICAgIGNhcHR1cmVJbWFnZSgpIHsNCiAgICAgIC8vIOWcqOeUu+W4g+S4iue7mOWItuinhumikeW9k+WJjeW4pw0KICAgICAgY29uc3QgdmlkZW8gPSB0aGlzLiRyZWZzLnZpZGVvOw0KICAgICAgY29uc3QgY2FudmFzID0gdGhpcy4kcmVmcy5jYW52YXM7DQogICAgICBjYW52YXMud2lkdGggPSB2aWRlby52aWRlb1dpZHRoOw0KICAgICAgY2FudmFzLmhlaWdodCA9IHZpZGVvLnZpZGVvSGVpZ2h0Ow0KICAgICAgY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7DQogICAgICBjdHguZHJhd0ltYWdlKHZpZGVvLCAwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpOw0KICAgICAgDQogICAgICAvLyDojrflj5bmlbDmja5VUkwNCiAgICAgIHJldHVybiBjYW52YXMudG9EYXRhVVJMKCdpbWFnZS9qcGVnJyk7DQogICAgfSwNCiAgICANCiAgICBhc3luYyBkZXRlY3RMaXZlbmVzcyhpbWFnZURhdGEpIHsNCiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuZGV0ZWN0TGl2ZW5lc3Moew0KICAgICAgICBpbWFnZTogaW1hZ2VEYXRhLA0KICAgICAgICBtZXRob2Q6IHRoaXMubGl2ZW5lc3NNZXRob2QNCiAgICAgIH0pOw0KICAgICAgDQogICAgICByZXR1cm4gcmVzdWx0Ow0KICAgIH0sDQogICAgDQogICAgYXN5bmMgcmVjb2duaXplRmFjZShpbWFnZURhdGEpIHsNCiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMucmVjb2duaXplRmFjZShpbWFnZURhdGEpOw0KICAgICAgcmV0dXJuIHJlc3VsdDsNCiAgICB9LA0KICAgIA0KICAgIGFzeW5jIHRlc3RMaXZlbmVzcygpIHsNCiAgICAgIC8vIOa4hemZpOS5i+WJjeeahOe7k+aenA0KICAgICAgdGhpcy5kZXRlY3Rpb25SZXN1bHQgPSBudWxsOw0KICAgICAgdGhpcy5yZWNvZ25pdGlvblJlc3VsdCA9IG51bGw7DQogICAgICANCiAgICAgIGlmICghdGhpcy5jYW1lcmFTdGFydGVkKSB7DQogICAgICAgIHRoaXMuU0VUX0VSUk9SKCfor7flhYjlkK/liqjmkYTlg4/lpLQnKTsNCiAgICAgICAgcmV0dXJuOw0KICAgICAgfQ0KICAgICAgDQogICAgICBjb25zdCBpbWFnZURhdGEgPSB0aGlzLmNhcHR1cmVJbWFnZSgpOw0KICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy5kZXRlY3RMaXZlbmVzcyhpbWFnZURhdGEpOw0KICAgICAgdGhpcy5kZXRlY3Rpb25SZXN1bHQgPSByZXN1bHQ7DQogICAgICANCiAgICAgIC8vIOa3u+WKoOaIkOWKn+WKqOeUu+aViOaenO+8jOWmguaenOajgOa1i+aIkOWKnw0KICAgICAgaWYgKHJlc3VsdC5pc19saXZlKSB7DQogICAgICAgIHRoaXMucGxheVN1Y2Nlc3NTb3VuZCgpOw0KICAgICAgfQ0KICAgIH0sDQogICAgDQogICAgYXN5bmMgY2FwdHVyZUFuZFJlY29nbml6ZSgpIHsNCiAgICAgIC8vIOa4hemZpOS5i+WJjeeahOe7k+aenA0KICAgICAgdGhpcy5kZXRlY3Rpb25SZXN1bHQgPSBudWxsOw0KICAgICAgdGhpcy5yZWNvZ25pdGlvblJlc3VsdCA9IG51bGw7DQogICAgICANCiAgICAgIGlmICghdGhpcy5jYW1lcmFTdGFydGVkKSB7DQogICAgICAgIHRoaXMuU0VUX0VSUk9SKCfor7flhYjlkK/liqjmkYTlg4/lpLQnKTsNCiAgICAgICAgcmV0dXJuOw0KICAgICAgfQ0KICAgICAgDQogICAgICBjb25zdCBpbWFnZURhdGEgPSB0aGlzLmNhcHR1cmVJbWFnZSgpOw0KICAgICAgDQogICAgICAvLyDlhYjov5vooYzmtLvkvZPmo4DmtYsNCiAgICAgIGNvbnN0IGxpdmVuZXNzUmVzdWx0ID0gYXdhaXQgdGhpcy5kZXRlY3RMaXZlbmVzcyhpbWFnZURhdGEpOw0KICAgICAgdGhpcy5kZXRlY3Rpb25SZXN1bHQgPSBsaXZlbmVzc1Jlc3VsdDsNCiAgICAgIA0KICAgICAgaWYgKCFsaXZlbmVzc1Jlc3VsdC5pc19saXZlKSB7DQogICAgICAgIHRoaXMuU0VUX0VSUk9SKCfmtLvkvZPmo4DmtYvlpLHotKXvvIzml6Dms5Xov5vooYzogIPli6QnKTsNCiAgICAgICAgcmV0dXJuOw0KICAgICAgfQ0KICAgICAgDQogICAgICAvLyDpgJrov4fmtLvkvZPmo4DmtYvlkI7ov5vooYzkurrohLjor4bliKsNCiAgICAgIGNvbnN0IHJlY29nbml0aW9uUmVzdWx0ID0gYXdhaXQgdGhpcy5yZWNvZ25pemVGYWNlKGltYWdlRGF0YSk7DQogICAgICB0aGlzLnJlY29nbml0aW9uUmVzdWx0ID0gcmVjb2duaXRpb25SZXN1bHQ7DQogICAgICANCiAgICAgIC8vIOa3u+WKoOaIkOWKn+WKqOeUu+aViOaenO+8jOWmguaenOivhuWIq+aIkOWKnw0KICAgICAgaWYgKHJlY29nbml0aW9uUmVzdWx0LnN1Y2Nlc3MpIHsNCiAgICAgICAgdGhpcy5wbGF5U3VjY2Vzc1NvdW5kKCk7DQogICAgICB9DQogICAgfSwNCiAgICANCiAgICB1cGRhdGVMaXZlbmVzc01ldGhvZChtZXRob2QpIHsNCiAgICAgIHRoaXMuc2V0TGl2ZW5lc3NNZXRob2QobWV0aG9kKTsNCiAgICB9LA0KICAgIA0KICAgIHBsYXlTdWNjZXNzU291bmQoKSB7DQogICAgICAvLyDlj6/ku6Xmt7vliqDmiJDlip/pn7PmlYgNCiAgICAgIGNvbnN0IGF1ZGlvID0gbmV3IEF1ZGlvKCk7DQogICAgICBhdWRpby5zcmMgPSByZXF1aXJlKCdAL2Fzc2V0cy9zdWNjZXNzLm1wMycpOw0KICAgICAgYXVkaW8ucGxheSgpLmNhdGNoKGUgPT4gY29uc29sZS5sb2coJ+mfs+mikeaSreaUvuWksei0pScsIGUpKTsNCiAgICB9LA0KICAgIA0KICAgIGdldFNpbWlsYXJpdHlDb2xvcihzaW1pbGFyaXR5KSB7DQogICAgICBpZiAoc2ltaWxhcml0eSA+IDAuOCkgcmV0dXJuICdzdWNjZXNzJzsNCiAgICAgIGlmIChzaW1pbGFyaXR5ID4gMC42KSByZXR1cm4gJ3dhcm5pbmcnOw0KICAgICAgcmV0dXJuICdlcnJvcic7DQogICAgfSwNCiAgICANCiAgICBnZXRDdXJyZW50TGl2ZW5lc3NNZXRob2ROYW1lKCkgew0KICAgICAgY29uc3QgbWV0aG9kID0gdGhpcy5saXZlbmVzc01ldGhvZHMuZmluZChtID0+IG0udmFsdWUgPT09IHRoaXMubGl2ZW5lc3NNZXRob2QpOw0KICAgICAgcmV0dXJuIG1ldGhvZCA/IG1ldGhvZC50ZXh0IDogJ+acquefpeaWueazlSc7DQogICAgfQ0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIC8vIOWIneWni+WMluaXtuS7jnN0b3Jl6I635Y+W5rS75L2T5qOA5rWL5pa55rOVDQogICAgdGhpcy5saXZlbmVzc01ldGhvZCA9IHRoaXMuJHN0b3JlLmdldHRlcnMubGl2ZW5lc3NNZXRob2Q7DQogIH0sDQogIGJlZm9yZURlc3Ryb3koKSB7DQogICAgLy8g57uE5Lu26ZSA5q+B5YmN5YWz6Zet5pGE5YOP5aS0DQogICAgdGhpcy5zdG9wQ2FtZXJhKCk7DQogIH0NCn0NCg=="},{"version":3,"sources":["Attendance.vue"],"names":[],"mappings":";AAgfile":"Attendance.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"attendance\">\r\n    <v-row>\r\n      <v-col cols=\"12\" md=\"8\">\r\n        <v-card elevation=\"3\" class=\"hover-card\">\r\n          <v-card-title class=\"headline primary--text\">\r\n            <v-icon left large color=\"primary\">mdi-account-check</v-icon>\r\n            考勤打卡\r\n            <v-spacer></v-spacer>\r\n            <v-chip \r\n              :color=\"cameraStarted ? 'success' : 'error'\" \r\n              small\r\n              class=\"animated-chip\"\r\n            >\r\n              {{ cameraStarted ? '摄像头已启动' : '摄像头未启动' }}\r\n            </v-chip>\r\n          </v-card-title>\r\n          \r\n          <v-card-text>\r\n            <div class=\"camera-container\">\r\n              <video ref=\"video\" width=\"100%\" autoplay playsinline></video>\r\n              <canvas ref=\"canvas\" style=\"display: none;\"></canvas>\r\n              \r\n              <div class=\"camera-overlay\" v-if=\"!cameraStarted\">\r\n                <v-btn color=\"primary\" @click=\"startCamera\" class=\"btn-pulse\">\r\n                  <v-icon left>mdi-camera</v-icon>\r\n                  启动摄像头\r\n                </v-btn>\r\n              </div>\r\n              \r\n              <div v-if=\"isLoading\" class=\"loading-overlay\">\r\n                <v-progress-circular indeterminate color=\"primary\" size=\"64\"></v-progress-circular>\r\n                <div class=\"mt-4 text-center\">\r\n                  <div class=\"loading-text\">处理中</div>\r\n                  <div class=\"loading-wave mt-2\">\r\n                    <div class=\"dot\"></div>\r\n                    <div class=\"dot\"></div>\r\n                    <div class=\"dot\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div v-if=\"recognitionResult && recognitionResult.success\" class=\"success-overlay\">\r\n                <v-icon color=\"success\" size=\"64\">mdi-check-circle</v-icon>\r\n                <div class=\"mt-2 text-h6\">签到成功！</div>\r\n              </div>\r\n              \r\n              <div class=\"face-frame\" v-if=\"cameraStarted && !isLoading\"></div>\r\n            </div>\r\n            \r\n            <div class=\"mt-4 text-center action-buttons\">\r\n              <v-btn \r\n                color=\"primary\" \r\n                large \r\n                @click=\"captureAndRecognize\" \r\n                :disabled=\"!cameraStarted || isLoading\"\r\n                class=\"btn-pulse mx-2\"\r\n              >\r\n                <v-icon left>mdi-account-check</v-icon>\r\n                考勤打卡\r\n              </v-btn>\r\n              \r\n              <v-btn \r\n                color=\"warning\" \r\n                @click=\"testLiveness\" \r\n                :disabled=\"!cameraStarted || isLoading\"\r\n                class=\"btn-pulse mx-2\"\r\n              >\r\n                <v-icon left>mdi-shield-account</v-icon>\r\n                测试活体\r\n              </v-btn>\r\n              \r\n              <v-menu offset-y>\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                  <v-btn\r\n                    color=\"info\"\r\n                    text\r\n                    v-bind=\"attrs\"\r\n                    v-on=\"on\"\r\n                    class=\"mx-2\"\r\n                  >\r\n                    <v-icon left>mdi-cog</v-icon>\r\n                    活体检测方法\r\n                    <v-icon right>mdi-chevron-down</v-icon>\r\n                  </v-btn>\r\n                </template>\r\n                <v-list>\r\n                  <v-list-item\r\n                    v-for=\"(method, index) in livenessMethods\"\r\n                    :key=\"index\"\r\n                    @click=\"updateLivenessMethod(method.value)\"\r\n                  >\r\n                    <v-list-item-icon>\r\n                      <v-icon v-if=\"livenessMethod === method.value\" color=\"success\">\r\n                        mdi-check\r\n                      </v-icon>\r\n                    </v-list-item-icon>\r\n                    <v-list-item-content>\r\n                      <v-list-item-title>{{ method.text }}</v-list-item-title>\r\n                    </v-list-item-content>\r\n                  </v-list-item>\r\n                </v-list>\r\n              </v-menu>\r\n            </div>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-col>\r\n      \r\n      <v-col cols=\"12\" md=\"4\">\r\n        <v-card elevation=\"3\" class=\"hover-card mb-4\">\r\n          <v-card-title class=\"headline primary--text\">\r\n            <v-icon left color=\"primary\">mdi-information</v-icon>\r\n            检测结果\r\n          </v-card-title>\r\n          \r\n          <v-card-text>\r\n            <v-alert\r\n              v-if=\"detectionResult\"\r\n              :type=\"detectionResult.is_live ? 'success' : 'error'\"\r\n              class=\"result-alert\"\r\n            >\r\n              <strong>活体检测结果:</strong> {{ detectionResult.message }}\r\n              <div class=\"mt-2\">\r\n                <v-progress-linear\r\n                  :value=\"detectionResult.confidence * 100\"\r\n                  :color=\"detectionResult.is_live ? 'success' : 'error'\"\r\n                  height=\"8\"\r\n                  striped\r\n                ></v-progress-linear>\r\n                <div class=\"caption text-right\">\r\n                  置信度: {{ Math.round(detectionResult.confidence * 100) }}%\r\n                </div>\r\n              </div>\r\n            </v-alert>\r\n            \r\n            <v-alert\r\n              v-if=\"recognitionResult\"\r\n              :type=\"recognitionResult.success ? 'success' : 'error'\"\r\n              class=\"result-alert\"\r\n            >\r\n              <strong>人脸识别结果:</strong> \r\n              <div v-if=\"recognitionResult.success\">\r\n                识别到学生 <strong>{{ recognitionResult.student_name }}</strong> ({{ recognitionResult.student_id }})\r\n              </div>\r\n              <div v-else>\r\n                未找到匹配的人脸\r\n              </div>\r\n              <div class=\"mt-2\" v-if=\"recognitionResult.similarity\">\r\n                <v-progress-linear\r\n                  :value=\"recognitionResult.similarity * 100\"\r\n                  :color=\"getSimilarityColor(recognitionResult.similarity)\"\r\n                  height=\"8\"\r\n                  striped\r\n                ></v-progress-linear>\r\n                <div class=\"caption text-right\">\r\n                  相似度: {{ Math.round(recognitionResult.similarity * 100) }}%\r\n                </div>\r\n              </div>\r\n            </v-alert>\r\n            \r\n            <div class=\"text-center py-4\" v-if=\"!detectionResult && !recognitionResult\">\r\n              <v-icon color=\"grey\" size=\"64\">mdi-camera-off</v-icon>\r\n              <div class=\"mt-2 grey--text\">尚未进行检测</div>\r\n            </div>\r\n          </v-card-text>\r\n        </v-card>\r\n        \r\n        <v-card elevation=\"3\" class=\"hover-card\">\r\n          <v-card-title class=\"headline primary--text\">\r\n            <v-icon left color=\"primary\">mdi-help-circle</v-icon>\r\n            操作指南\r\n          </v-card-title>\r\n          \r\n          <v-card-text>\r\n            <v-timeline dense>\r\n              <v-timeline-item color=\"primary\">\r\n                <div class=\"font-weight-medium\">第一步：启动摄像头</div>\r\n                <div class=\"text-caption\">点击\"启动摄像头\"按钮，允许浏览器访问摄像头</div>\r\n              </v-timeline-item>\r\n              \r\n              <v-timeline-item color=\"warning\">\r\n                <div class=\"font-weight-medium\">第二步：面对摄像头</div>\r\n                <div class=\"text-caption\">确保面部在摄像头中清晰可见，光线充足</div>\r\n              </v-timeline-item>\r\n              \r\n              <v-timeline-item color=\"success\">\r\n                <div class=\"font-weight-medium\">第三步：进行考勤</div>\r\n                <div class=\"text-caption\">点击\"考勤打卡\"按钮，系统将自动进行活体检测和人脸识别</div>\r\n              </v-timeline-item>\r\n            </v-timeline>\r\n            \r\n            <v-alert\r\n              dense\r\n              type=\"info\"\r\n              border=\"left\"\r\n              class=\"mt-3\"\r\n            >\r\n              <div class=\"font-weight-medium\">当前活体检测方法</div>\r\n              <div>{{ getCurrentLivenessMethodName() }}</div>\r\n            </v-alert>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapGetters, mapMutations, mapActions } from 'vuex';\r\n\r\nexport default {\r\n  name: 'Attendance',\r\n  data: () => ({\r\n    cameraStarted: false,\r\n    detectionResult: null,\r\n    recognitionResult: null,\r\n    livenessMethods: [\r\n      { text: '眨眼检测', value: 'blink' },\r\n      { text: '深度学习', value: 'deep_learning' },\r\n      { text: '改进多模态', value: 'improved' },\r\n      { text: '第三方API', value: 'api' }\r\n    ]\r\n  }),\r\n  computed: {\r\n    ...mapState(['livenessMethod']),\r\n    ...mapGetters(['isLoading'])\r\n  },\r\n  methods: {\r\n    ...mapMutations(['SET_ERROR']),\r\n    ...mapActions(['detectLiveness', 'recognizeFace', 'setLivenessMethod']),\r\n    \r\n    startCamera() {\r\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n        navigator.mediaDevices.getUserMedia({ video: true })\r\n          .then(stream => {\r\n            this.$refs.video.srcObject = stream;\r\n            this.cameraStarted = true;\r\n            this.SET_ERROR(null);\r\n          })\r\n          .catch(err => {\r\n            this.SET_ERROR(`启动摄像头失败: ${err.message}`);\r\n            console.error('启动摄像头失败', err);\r\n          });\r\n      } else {\r\n        this.SET_ERROR('您的浏览器不支持摄像头访问');\r\n      }\r\n    },\r\n    \r\n    stopCamera() {\r\n      if (this.cameraStarted && this.$refs.video.srcObject) {\r\n        const tracks = this.$refs.video.srcObject.getTracks();\r\n        tracks.forEach(track => track.stop());\r\n        this.$refs.video.srcObject = null;\r\n        this.cameraStarted = false;\r\n      }\r\n    },\r\n    \r\n    captureImage() {\r\n      // 在画布上绘制视频当前帧\r\n      const video = this.$refs.video;\r\n      const canvas = this.$refs.canvas;\r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n      const ctx = canvas.getContext('2d');\r\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n      \r\n      // 获取数据URL\r\n      return canvas.toDataURL('image/jpeg');\r\n    },\r\n    \r\n    async detectLiveness(imageData) {\r\n      const result = await this.detectLiveness({\r\n        image: imageData,\r\n        method: this.livenessMethod\r\n      });\r\n      \r\n      return result;\r\n    },\r\n    \r\n    async recognizeFace(imageData) {\r\n      const result = await this.recognizeFace(imageData);\r\n      return result;\r\n    },\r\n    \r\n    async testLiveness() {\r\n      // 清除之前的结果\r\n      this.detectionResult = null;\r\n      this.recognitionResult = null;\r\n      \r\n      if (!this.cameraStarted) {\r\n        this.SET_ERROR('请先启动摄像头');\r\n        return;\r\n      }\r\n      \r\n      const imageData = this.captureImage();\r\n      const result = await this.detectLiveness(imageData);\r\n      this.detectionResult = result;\r\n      \r\n      // 添加成功动画效果，如果检测成功\r\n      if (result.is_live) {\r\n        this.playSuccessSound();\r\n      }\r\n    },\r\n    \r\n    async captureAndRecognize() {\r\n      // 清除之前的结果\r\n      this.detectionResult = null;\r\n      this.recognitionResult = null;\r\n      \r\n      if (!this.cameraStarted) {\r\n        this.SET_ERROR('请先启动摄像头');\r\n        return;\r\n      }\r\n      \r\n      const imageData = this.captureImage();\r\n      \r\n      // 先进行活体检测\r\n      const livenessResult = await this.detectLiveness(imageData);\r\n      this.detectionResult = livenessResult;\r\n      \r\n      if (!livenessResult.is_live) {\r\n        this.SET_ERROR('活体检测失败，无法进行考勤');\r\n        return;\r\n      }\r\n      \r\n      // 通过活体检测后进行人脸识别\r\n      const recognitionResult = await this.recognizeFace(imageData);\r\n      this.recognitionResult = recognitionResult;\r\n      \r\n      // 添加成功动画效果，如果识别成功\r\n      if (recognitionResult.success) {\r\n        this.playSuccessSound();\r\n      }\r\n    },\r\n    \r\n    updateLivenessMethod(method) {\r\n      this.setLivenessMethod(method);\r\n    },\r\n    \r\n    playSuccessSound() {\r\n      // 可以添加成功音效\r\n      const audio = new Audio();\r\n      audio.src = require('@/assets/success.mp3');\r\n      audio.play().catch(e => console.log('音频播放失败', e));\r\n    },\r\n    \r\n    getSimilarityColor(similarity) {\r\n      if (similarity > 0.8) return 'success';\r\n      if (similarity > 0.6) return 'warning';\r\n      return 'error';\r\n    },\r\n    \r\n    getCurrentLivenessMethodName() {\r\n      const method = this.livenessMethods.find(m => m.value === this.livenessMethod);\r\n      return method ? method.text : '未知方法';\r\n    }\r\n  },\r\n  mounted() {\r\n    // 初始化时从store获取活体检测方法\r\n    this.livenessMethod = this.$store.getters.livenessMethod;\r\n  },\r\n  beforeDestroy() {\r\n    // 组件销毁前关闭摄像头\r\n    this.stopCamera();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.attendance {\r\n  animation: fadeIn 0.5s ease-out;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.camera-container {\r\n  position: relative;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  height: 400px;\r\n  background-color: #000;\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.camera-container:hover {\r\n  box-shadow: 0 12px 30px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.camera-container video {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.camera-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  backdrop-filter: blur(5px);\r\n  -webkit-backdrop-filter: blur(5px);\r\n}\r\n\r\n.loading-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  backdrop-filter: blur(5px);\r\n  -webkit-backdrop-filter: blur(5px);\r\n}\r\n\r\n.success-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  backdrop-filter: blur(5px);\r\n  -webkit-backdrop-filter: blur(5px);\r\n  animation: fadeInOut 3s forwards;\r\n  color: white;\r\n}\r\n\r\n@keyframes fadeInOut {\r\n  0% { opacity: 0; }\r\n  20% { opacity: 1; }\r\n  80% { opacity: 1; }\r\n  100% { opacity: 0; display: none; }\r\n}\r\n\r\n.loading-text {\r\n  font-size: 18px;\r\n  color: white;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.face-frame {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 250px;\r\n  height: 250px;\r\n  transform: translate(-50%, -50%);\r\n  border: 2px dashed rgba(255, 255, 255, 0.7);\r\n  border-radius: 50%;\r\n  box-shadow: 0 0 0 2000px rgba(0, 0, 0, 0.3);\r\n  animation: pulse-border 2s infinite;\r\n}\r\n\r\n@keyframes pulse-border {\r\n  0% {\r\n    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.3);\r\n  }\r\n  70% {\r\n    box-shadow: 0 0 0 2000px rgba(0, 0, 0, 0.4);\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 0 2000px rgba(0, 0, 0, 0.3);\r\n  }\r\n}\r\n\r\n.action-buttons {\r\n  animation: slideUp 0.5s ease-out;\r\n}\r\n\r\n@keyframes slideUp {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.result-alert {\r\n  transition: all 0.3s ease;\r\n  animation: slideInRight 0.5s ease-out;\r\n}\r\n\r\n@keyframes slideInRight {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateX(30px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n}\r\n\r\n.animated-chip {\r\n  animation: bounce 1s ease infinite;\r\n}\r\n\r\n@keyframes bounce {\r\n  0%, 100% { transform: translateY(0); }\r\n  50% { transform: translateY(-5px); }\r\n}\r\n</style> "]}]}