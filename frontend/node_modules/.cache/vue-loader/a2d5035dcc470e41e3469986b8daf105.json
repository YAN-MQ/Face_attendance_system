{"remainingRequest":"E:\\内容安全\\final\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\内容安全\\final\\frontend\\src\\components\\TestButtons.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\内容安全\\final\\frontend\\src\\components\\TestButtons.vue","mtime":1745417804453},{"path":"E:\\内容安全\\final\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745383817393},{"path":"E:\\内容安全\\final\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1745383814346},{"path":"E:\\内容安全\\final\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745383817393},{"path":"E:\\内容安全\\final\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1745383816753}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdUZXN0QnV0dG9ucycsDQogIGRhdGE6ICgpID0+ICh7DQogICAgaXNMb2FkaW5nOiBmYWxzZSwNCiAgICByZXN1bHQ6IG51bGwNCiAgfSksDQogIG1ldGhvZHM6IHsNCiAgICBhc3luYyB0ZXN0RmFjZVJlY29nbml0aW9uKCkgew0KICAgICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlOw0KICAgICAgdGhpcy5yZXN1bHQgPSBudWxsOw0KICAgICAgDQogICAgICB0cnkgew0KICAgICAgICBjb25zb2xlLmxvZygn5rWL6K+V5Lq66IS46K+G5YirQVBJ6L+e5o6lJyk7DQogICAgICAgIA0KICAgICAgICAvLyDlj5HpgIHmtYvor5Xor7fmsYLliLDlkI7nq68NCiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoJy9hcGkvdGVzdC9mYWNlX3JlY29nbml0aW9uJyk7DQogICAgICAgIA0KICAgICAgICBjb25zb2xlLmxvZygn5Lq66IS46K+G5Yir5rWL6K+V5ZON5bqUOicsIHJlc3BvbnNlLmRhdGEpOw0KICAgICAgICB0aGlzLnJlc3VsdCA9IHsNCiAgICAgICAgICBzdWNjZXNzOiB0cnVlLA0KICAgICAgICAgIG1lc3NhZ2U6ICfkurrohLjor4bliKtBUEnov57mjqXmiJDlip8nLA0KICAgICAgICAgIGRhdGE6IHJlc3BvbnNlLmRhdGENCiAgICAgICAgfTsNCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgIGNvbnNvbGUuZXJyb3IoJ+S6uuiEuOivhuWIq+a1i+ivleWksei0pTonLCBlcnJvcik7DQogICAgICAgIA0KICAgICAgICB0aGlzLnJlc3VsdCA9IHsNCiAgICAgICAgICBzdWNjZXNzOiBmYWxzZSwNCiAgICAgICAgICBtZXNzYWdlOiAn5Lq66IS46K+G5YirQVBJ6L+e5o6l5aSx6LSlJywNCiAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSwNCiAgICAgICAgICBkZXRhaWxzOiBlcnJvci5yZXNwb25zZSA/IGVycm9yLnJlc3BvbnNlLmRhdGEgOiBudWxsDQogICAgICAgIH07DQogICAgICB9IGZpbmFsbHkgew0KICAgICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlOw0KICAgICAgfQ0KICAgIH0sDQogICAgDQogICAgYXN5bmMgdGVzdExpdmVuZXNzRGV0ZWN0aW9uKCkgew0KICAgICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlOw0KICAgICAgdGhpcy5yZXN1bHQgPSBudWxsOw0KICAgICAgDQogICAgICB0cnkgew0KICAgICAgICBjb25zb2xlLmxvZygn5rWL6K+V5rS75L2T5qOA5rWLQVBJ6L+e5o6lJyk7DQogICAgICAgIA0KICAgICAgICAvLyDmtYvor5XmiYDmnInmtLvkvZPmo4DmtYvmlrnms5UNCiAgICAgICAgY29uc3QgbWV0aG9kcyA9IFsnYmxpbmsnLCAnZGVlcF9sZWFybmluZycsICdpbXByb3ZlZCcsICdhcGknXTsNCiAgICAgICAgY29uc3QgcmVzdWx0cyA9IHt9Ow0KICAgICAgICANCiAgICAgICAgZm9yIChjb25zdCBtZXRob2Qgb2YgbWV0aG9kcykgew0KICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICBjb25zb2xlLmxvZyhg5rWL6K+V5rS75L2T5qOA5rWL5pa55rOVOiAke21ldGhvZH1gKTsNCiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KGAvYXBpL3Rlc3QvbGl2ZW5lc3NfZGV0ZWN0aW9uP21ldGhvZD0ke21ldGhvZH1gKTsNCiAgICAgICAgICAgIHJlc3VsdHNbbWV0aG9kXSA9IHsNCiAgICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSwNCiAgICAgICAgICAgICAgZGF0YTogcmVzcG9uc2UuZGF0YQ0KICAgICAgICAgICAgfTsNCiAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgcmVzdWx0c1ttZXRob2RdID0gew0KICAgICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSwNCiAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgIH07DQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIA0KICAgICAgICB0aGlzLnJlc3VsdCA9IHsNCiAgICAgICAgICBzdWNjZXNzOiBPYmplY3QudmFsdWVzKHJlc3VsdHMpLnNvbWUociA9PiByLnN1Y2Nlc3MpLA0KICAgICAgICAgIG1lc3NhZ2U6ICfmtLvkvZPmo4DmtYtBUEnmtYvor5XlrozmiJAnLA0KICAgICAgICAgIG1ldGhvZHM6IHJlc3VsdHMNCiAgICAgICAgfTsNCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgIGNvbnNvbGUuZXJyb3IoJ+a0u+S9k+ajgOa1i+a1i+ivleWksei0pTonLCBlcnJvcik7DQogICAgICAgIA0KICAgICAgICB0aGlzLnJlc3VsdCA9IHsNCiAgICAgICAgICBzdWNjZXNzOiBmYWxzZSwNCiAgICAgICAgICBtZXNzYWdlOiAn5rS75L2T5qOA5rWLQVBJ6L+e5o6l5aSx6LSlJywNCiAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSwNCiAgICAgICAgICBkZXRhaWxzOiBlcnJvci5yZXNwb25zZSA/IGVycm9yLnJlc3BvbnNlLmRhdGEgOiBudWxsDQogICAgICAgIH07DQogICAgICB9IGZpbmFsbHkgew0KICAgICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlOw0KICAgICAgfQ0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["TestButtons.vue"],"names":[],"mappings":";AAgDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TestButtons.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"test-buttons\">\r\n    <v-card class=\"pa-4 ma-4 glassmorphism\">\r\n      <v-card-title class=\"headline primary--text\">\r\n        功能测试\r\n      </v-card-title>\r\n      <v-card-text>\r\n        <p>使用下面的按钮测试API连接是否正常</p>\r\n        \r\n        <div class=\"d-flex justify-center mt-6\">\r\n          <v-btn\r\n            color=\"primary\"\r\n            large\r\n            class=\"mx-2 btn-pulse\"\r\n            @click=\"testFaceRecognition\"\r\n            :loading=\"isLoading\"\r\n          >\r\n            <v-icon left>mdi-account-check</v-icon>\r\n            测试人脸识别\r\n          </v-btn>\r\n          \r\n          <v-btn\r\n            color=\"warning\"\r\n            large\r\n            class=\"mx-2 btn-pulse\"\r\n            @click=\"testLivenessDetection\"\r\n            :loading=\"isLoading\"\r\n          >\r\n            <v-icon left>mdi-shield-account</v-icon>\r\n            测试活体检测\r\n          </v-btn>\r\n        </div>\r\n        \r\n        <v-alert\r\n          v-if=\"result\"\r\n          :type=\"result.success ? 'success' : 'error'\"\r\n          border=\"left\"\r\n          class=\"mt-6\"\r\n        >\r\n          <strong>测试结果:</strong> {{ result.message }}\r\n          <pre class=\"mt-2\">{{ JSON.stringify(result, null, 2) }}</pre>\r\n        </v-alert>\r\n      </v-card-text>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'TestButtons',\r\n  data: () => ({\r\n    isLoading: false,\r\n    result: null\r\n  }),\r\n  methods: {\r\n    async testFaceRecognition() {\r\n      this.isLoading = true;\r\n      this.result = null;\r\n      \r\n      try {\r\n        console.log('测试人脸识别API连接');\r\n        \r\n        // 发送测试请求到后端\r\n        const response = await axios.get('/api/test/face_recognition');\r\n        \r\n        console.log('人脸识别测试响应:', response.data);\r\n        this.result = {\r\n          success: true,\r\n          message: '人脸识别API连接成功',\r\n          data: response.data\r\n        };\r\n      } catch (error) {\r\n        console.error('人脸识别测试失败:', error);\r\n        \r\n        this.result = {\r\n          success: false,\r\n          message: '人脸识别API连接失败',\r\n          error: error.message,\r\n          details: error.response ? error.response.data : null\r\n        };\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    \r\n    async testLivenessDetection() {\r\n      this.isLoading = true;\r\n      this.result = null;\r\n      \r\n      try {\r\n        console.log('测试活体检测API连接');\r\n        \r\n        // 测试所有活体检测方法\r\n        const methods = ['blink', 'deep_learning', 'improved', 'api'];\r\n        const results = {};\r\n        \r\n        for (const method of methods) {\r\n          try {\r\n            console.log(`测试活体检测方法: ${method}`);\r\n            const response = await axios.get(`/api/test/liveness_detection?method=${method}`);\r\n            results[method] = {\r\n              success: true,\r\n              data: response.data\r\n            };\r\n          } catch (error) {\r\n            results[method] = {\r\n              success: false,\r\n              error: error.message\r\n            };\r\n          }\r\n        }\r\n        \r\n        this.result = {\r\n          success: Object.values(results).some(r => r.success),\r\n          message: '活体检测API测试完成',\r\n          methods: results\r\n        };\r\n      } catch (error) {\r\n        console.error('活体检测测试失败:', error);\r\n        \r\n        this.result = {\r\n          success: false,\r\n          message: '活体检测API连接失败',\r\n          error: error.message,\r\n          details: error.response ? error.response.data : null\r\n        };\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.test-buttons {\r\n  animation: fadeIn 0.5s ease-out;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(20px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\npre {\r\n  background-color: rgba(0, 0, 0, 0.05);\r\n  padding: 12px;\r\n  border-radius: 4px;\r\n  overflow-x: auto;\r\n  font-size: 12px;\r\n}\r\n</style> "]}]}